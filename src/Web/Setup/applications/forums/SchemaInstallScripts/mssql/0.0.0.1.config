/****** Object:  Table [dbo].[cy_Groups]    Script Date: 11/10/2008 13:12:27 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[cy_Groups](
	[ItemID] [int] IDENTITY(1,1) NOT NULL,
	[ModuleID] [int] NOT NULL,
	[CreatedDate] [datetime] NOT NULL CONSTRAINT [DF_cy_Groups_DateCreated]  DEFAULT (getdate()),
	[CreatedBy] [int] NOT NULL,
	[Title] [nvarchar](100) NOT NULL,
	[Description] [ntext] NOT NULL,
	[IsModerated] [bit] NOT NULL CONSTRAINT [DF_cy_Groups_Moderated]  DEFAULT ((0)),
	[IsActive] [bit] NOT NULL CONSTRAINT [DF_cy_Groups_Active]  DEFAULT ((1)),
	[SortOrder] [int] NOT NULL CONSTRAINT [DF_cy_Groups_SortOrder]  DEFAULT ((100)),
	[TopicCount] [int] NOT NULL CONSTRAINT [DF_cy_Groups_TotalPosts]  DEFAULT ((0)),
	[PostCount] [int] NOT NULL CONSTRAINT [DF_cy_Groups_TotalTopics]  DEFAULT ((0)),
	[MostRecentPostDate] [datetime] NULL,
	[MostRecentPostUserID] [int] NOT NULL CONSTRAINT [DF_cy_Groups_MostRecentPostUserID]  DEFAULT ((-1)),
	[PostsPerPage] [int] NOT NULL CONSTRAINT [DF_cy_Groups_EntriesPerPage]  DEFAULT ((10)),
	[TopicsPerPage] [int] NOT NULL CONSTRAINT [DF_cy_Groups_TopicsPerPage]  DEFAULT ((40)),
	[AllowAnonymousPosts] [bit] NOT NULL CONSTRAINT [DF_cy_Groups_AllowAnonymousPosts]  DEFAULT ((1)),
 CONSTRAINT [PK_cy_Groups] PRIMARY KEY CLUSTERED 
(
	[ItemID] ASC
) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[cy_GroupSubscriptions]    Script Date: 11/10/2008 13:12:29 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[cy_GroupSubscriptions](
	[SubscriptionID] [int] IDENTITY(1,1) NOT FOR REPLICATION NOT NULL,
	[GroupID] [int] NOT NULL,
	[UserID] [int] NOT NULL,
	[SubscribeDate] [datetime] NOT NULL CONSTRAINT [DF_cy_GroupSubscriptions_SubscribeDate]  DEFAULT (getdate()),
	[UnSubscribeDate] [datetime] NULL,
 CONSTRAINT [PK_cy_GroupSubscriptions] PRIMARY KEY CLUSTERED 
(
	[SubscriptionID] ASC
) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  StoredProcedure [dbo].[cy_GroupTopics_SelectPageByUser]    Script Date: 11/10/2008 13:12:16 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[cy_GroupTopics_SelectPageByUser]

@UserID		int,
@PageNumber 			int,
@PageSize 			int

AS

DECLARE @PageLowerBound int
DECLARE @PageUpperBound int


SET @PageLowerBound = (@PageSize * @PageNumber) - @PageSize
SET @PageUpperBound = @PageLowerBound + @PageSize + 1

CREATE TABLE #PageIndex 
(
	IndexID int IDENTITY (1, 1) NOT NULL,
TopicID Int
)

BEGIN

INSERT INTO #PageIndex ( 
TopicID
)

SELECT
		[TopicID]
		
FROM
		[dbo].[cy_GroupTopics]
		
WHERE
	TopicID IN (Select DISTINCT TopicID FROM cy_GroupPosts WHERE cy_GroupPosts.UserID = @UserID)

ORDER BY
	MostRecentPostDate DESC

END

DECLARE @TotalRows int
DECLARE @TotalPages int
DECLARE @Remainder int

SET @TotalRows = (SELECT Count(*) FROM #PageIndex)
SET @TotalPages = @TotalRows / @PageSize
SET @Remainder = @TotalRows % @PageSize
IF @Remainder > 0 
SET @TotalPages = @TotalPages + 1

SELECT
		t.*,
		f.Title As Group,
		f.ModuleID,
		(SELECT TOP 1 PageID FROM cy_PageModules WHERE cy_PageModules.ModuleID = f.ModuleID AND (PublishEndDate IS NULL OR PublishEndDate > getutcdate()) ) As PageID,
		COALESCE(u.Name, 'Guest') As MostRecentPostUser,
		s.Name As StartedBy,
		'TotalPages' = @TotalPages
		
FROM
		[dbo].[cy_GroupTopics] t

JOIN			#PageIndex t2
ON			
		t.[TopicID] = t2.[TopicID]

JOIN	cy_Groups f
ON t.GroupID = f.ItemID

LEFT OUTER JOIN	cy_Users u
ON t.MostRecentPostUserID = u.UserID

LEFT OUTER JOIN	cy_Users s
ON t.StartedByUserID = s.UserID
		
WHERE
		t2.IndexID > @PageLowerBound 
		AND t2.IndexID < @PageUpperBound
		
ORDER BY t2.IndexID

DROP TABLE #PageIndex
GO
/****** Object:  Table [dbo].[cy_GroupPosts]    Script Date: 11/10/2008 13:12:21 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[cy_GroupPosts](
	[PostID] [int] IDENTITY(1,1) NOT NULL,
	[TopicID] [int] NOT NULL,
	[TopicSequence] [int] NOT NULL CONSTRAINT [DF_cy_GroupPosts_TopicSequence]  DEFAULT ((1)),
	[Subject] [nvarchar](255) NOT NULL,
	[PostDate] [datetime] NOT NULL CONSTRAINT [DF_cy_GroupPosts_PostDate]  DEFAULT (getdate()),
	[Approved] [bit] NOT NULL CONSTRAINT [DF_cy_GroupPosts_Approved]  DEFAULT ((0)),
	[UserID] [int] NOT NULL CONSTRAINT [DF_cy_GroupPosts_UserID]  DEFAULT ((-1)),
	[SortOrder] [int] NOT NULL CONSTRAINT [DF_cy_GroupPosts_SortOrder]  DEFAULT ((100)),
	[Post] [ntext] NOT NULL,
 CONSTRAINT [PK_cy_GroupPosts] PRIMARY KEY CLUSTERED 
(
	[PostID] ASC
) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[cy_GroupTopicSubscriptions]    Script Date: 11/10/2008 13:12:35 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[cy_GroupTopicSubscriptions](
	[TopicSubscriptionID] [int] IDENTITY(1,1) NOT FOR REPLICATION NOT NULL,
	[TopicID] [int] NOT NULL,
	[UserID] [int] NOT NULL,
	[SubscribeDate] [datetime] NOT NULL CONSTRAINT [DF_cy_GroupTopicSubscriptions_SubscribeDate]  DEFAULT (getdate()),
	[UnSubscribeDate] [datetime] NULL,
 CONSTRAINT [PK_cy_GroupTopicSubscriptions] PRIMARY KEY CLUSTERED 
(
	[TopicSubscriptionID] ASC
) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[cy_GroupTopics]    Script Date: 11/10/2008 13:12:33 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[cy_GroupTopics](
	[TopicID] [int] IDENTITY(1,1) NOT NULL,
	[GroupID] [int] NOT NULL,
	[TopicTitle] [nvarchar](255) NOT NULL,
	[TopicDate] [datetime] NOT NULL CONSTRAINT [DF_cy_GroupTopics_TopicDate]  DEFAULT (getdate()),
	[TotalViews] [int] NOT NULL CONSTRAINT [DF_cy_GroupTopics_TotalViews]  DEFAULT ((0)),
	[TotalReplies] [int] NOT NULL CONSTRAINT [DF_cy_GroupTopics_TotalReplies]  DEFAULT ((0)),
	[SortOrder] [int] NOT NULL CONSTRAINT [DF_cy_GroupTopics_SortOrder]  DEFAULT ((1000)),
	[IsLocked] [bit] NOT NULL CONSTRAINT [DF_cy_GroupTopics_IsLocked]  DEFAULT ((0)),
	[GroupSequence] [int] NOT NULL CONSTRAINT [DF_cy_GroupTopics_GroupSequence]  DEFAULT ((1)),
	[MostRecentPostDate] [datetime] NULL CONSTRAINT [DF_cy_GroupTopics_MostRecentPostDate]  DEFAULT (getdate()),
	[MostRecentPostUserID] [int] NULL,
	[StartedByUserID] [int] NOT NULL,
 CONSTRAINT [PK_cy_GroupTopics] PRIMARY KEY CLUSTERED 
(
	[TopicID] ASC
) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  StoredProcedure [dbo].[cy_GroupPosts_SelectForRss]    Script Date: 11/10/2008 13:12:08 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
CREATE PROCEDURE [dbo].[cy_GroupPosts_SelectForRss]

/*

A list of all groups posts (and associated data) filtered by the specified criteria

MaximumDays is the maximum age in days of the posts to return

*/
@SiteID				int,
@PageID				int,
@ModuleID			int,
@ItemID				int,
@TopicID			int,
@MaximumDays			int


AS
SELECT		fp.*,
		ft.TopicTitle,
		ft.GroupID,
		'StartedBy' = COALESCE(s.[Name],'Guest'),
		'PostAuthor' = COALESCE(up.[Name], 'Guest'),
		'PostAuthorTotalPosts' = up.TotalPosts,
		'PostAuthorAvatar' = up.AvatarUrl,
		'PostAuthorWebSiteUrl' = up.WebSiteURL,
		'PostAuthorSignature' = up.Signature


FROM		cy_GroupPosts fp

JOIN		cy_GroupTopics ft
ON		fp.TopicID = ft.TopicID

JOIN		cy_Groups f
ON		ft.GroupID = f.ItemID

JOIN		cy_Modules m
ON		f.ModuleID = m.ModuleID

JOIN	cy_PageModules pm
ON	    m.ModuleID = pm.ModuleID

JOIN		cy_Pages p
ON		pm.PageID = p.PageID

LEFT OUTER JOIN		cy_Users u
ON		ft.MostRecentPostUserID = u.UserID

LEFT OUTER JOIN		cy_Users s
ON		ft.StartedByUserID = s.UserID

LEFT OUTER JOIN		cy_Users up
ON		up.UserID = fp.UserID

WHERE	p.SiteID = @SiteID
AND	(@PageID = -1 OR p.PageID = @PageID)
AND	(@ModuleID = -1 OR m.ModuleID = @ModuleID)
AND	(@ItemID = -1 OR f.ItemID = @ItemID)
AND	(@TopicID = -1 OR ft.TopicID = @TopicID)
AND	(@MaximumDays = -1 OR datediff(dd, getdate(), fp.PostDate) <= @MaximumDays)

ORDER BY	fp.PostDate DESC
GO
/****** Object:  StoredProcedure [dbo].[cy_GroupTopics_SelectByPage]    Script Date: 11/10/2008 13:12:16 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
CREATE PROCEDURE [dbo].[cy_GroupTopics_SelectByPage]

@SiteID		int,
@PageID		int

AS
SELECT  	fp.*,
		f.ModuleID,
		f.ItemID,
		m.ModuleTitle,
		md.FeatureName

FROM		cy_GroupPosts fp

JOIN		cy_GroupTopics ft
ON		fp.TopicID = ft.TopicID

JOIN		cy_Groups f
ON		f.ItemID = ft.GroupID

JOIN		cy_Modules m
ON		f.ModuleID = m.ModuleID

JOIN		cy_ModuleDefinitions md
ON		m.ModuleDefID = md.ModuleDefID

JOIN		cy_PageModules pm
ON			pm.ModuleID = m.ModuleID

JOIN		cy_Pages p
ON		p.PageID = pm.PageID

WHERE	p.SiteID = @SiteID
		AND pm.PageID = @PageID
		AND fp.Approved = 1
GO
/****** Object:  StoredProcedure [dbo].[cy_Groups_Delete]    Script Date: 11/10/2008 13:12:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[cy_Groups_Delete]

/*
Author:				Joe Audette
Created:			6/27/2006
Last Modified:		12/11/2006

*/

@ItemID			int

AS

DELETE FROM cy_GroupPosts

WHERE TopicID IN (SELECT TopicID FROM cy_GroupTopics
					WHERE GroupID = @ItemID)

DELETE FROM cy_GroupTopicSubscriptions

WHERE	TopicID IN (SELECT TopicID FROM cy_GroupTopics
					WHERE GroupID = @ItemID)

DELETE
FROM cy_GroupTopics
WHERE GroupID = @ItemID

DELETE
FROM cy_GroupSubscriptions
WHERE GroupID = @ItemID


DELETE
FROM			cy_Groups 

WHERE		ItemID = @ItemID
GO
/****** Object:  StoredProcedure [dbo].[cy_GroupTopics_CountByUser]    Script Date: 11/10/2008 13:12:14 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
CREATE PROCEDURE [dbo].[cy_GroupTopics_CountByUser]

/*
Author:				Joe Audette
Created:			2008-03-18
Last Modified:		2008-03-18

*/


@UserID		int

AS

SELECT	COUNT(*)

FROM		cy_GroupTopics

WHERE TopicID IN (Select DISTINCT TopicID FROM cy_GroupPosts WHERE cy_GroupPosts.UserID = @UserID)
GO
/****** Object:  StoredProcedure [dbo].[cy_GroupTopics_UpdateViewStats]    Script Date: 11/10/2008 13:12:17 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
CREATE PROCEDURE [dbo].[cy_GroupTopics_UpdateViewStats]


@TopicID			int



AS


UPDATE		cy_GroupTopics

SET		
			TotalViews = TotalViews + 1


WHERE		TopicID = @TopicID
GO
/****** Object:  StoredProcedure [dbo].[cy_GroupTopics_IncrementReplyCount]    Script Date: 11/10/2008 13:12:14 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
CREATE PROCEDURE [dbo].[cy_GroupTopics_IncrementReplyCount]


@TopicID			int,
@MostRecentPostUserID	int,
@MostRecentPostDate datetime



AS
UPDATE		cy_GroupTopics

SET			MostRecentPostUserID = @MostRecentPostUserID,
			TotalReplies = TotalReplies + 1,
			MostRecentPostDate = @MostRecentPostDate


WHERE		TopicID = @TopicID
GO
/****** Object:  StoredProcedure [dbo].[cy_GroupTopics_Update]    Script Date: 11/10/2008 13:12:17 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
CREATE PROCEDURE [dbo].[cy_GroupTopics_Update]

/*
Author:			Joe Audette
Created:		9/19/2004
Last Modified:		9/19/2004

*/

@TopicID			int,
@GroupID			int,
@TopicTitle		nvarchar(255),
@SortOrder			int,
@IsLocked			bit


AS


UPDATE		cy_GroupTopics

SET			GroupID = @GroupID,
			TopicTitle = @TopicTitle,
			SortOrder = @SortOrder,
			IsLocked = @IsLocked


WHERE		TopicID = @TopicID
GO
/****** Object:  StoredProcedure [dbo].[cy_GroupTopics_UpdateGroupSequence]    Script Date: 11/10/2008 13:12:17 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
CREATE PROCEDURE [dbo].[cy_GroupTopics_UpdateGroupSequence]

/*
Author:			Joe Audette
Created:		2007-06-07
Last Modified:	2007-06-07

*/

@TopicID			int,
@GroupSequence			int


AS


UPDATE		cy_GroupTopics

SET			GroupSequence = @GroupSequence


WHERE		TopicID = @TopicID
GO
/****** Object:  StoredProcedure [dbo].[cy_GroupTopics_Delete]    Script Date: 11/10/2008 13:12:14 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
CREATE PROCEDURE [dbo].[cy_GroupTopics_Delete]

/*
Author:			Joe Audette
Created:		11/28/2004
Last Modified:	8/14/2006

*/

@TopicID			int

AS

DELETE FROM cy_GroupTopicSubscriptions

WHERE	TopicID = @TopicID

DELETE FROM cy_GroupPosts

WHERE	TopicID = @TopicID

DELETE FROM 		cy_GroupTopics


WHERE		TopicID = @TopicID
GO
/****** Object:  StoredProcedure [dbo].[cy_GroupTopics_DecrementReplyCount]    Script Date: 11/10/2008 13:12:14 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
CREATE PROCEDURE [dbo].[cy_GroupTopics_DecrementReplyCount]

/*
Author:			Joe Audette
Created:		2/19/2005
Last Modified:		2/19/2005

*/

@TopicID			int


AS

DECLARE @MostRecentPostUserID int
DECLARE @MostRecentPostDate datetime
 
SELECT TOP 1  @MostRecentPostUserID = UserID,
		@MostRecentPostDate = PostDate

FROM cy_GroupPosts 
WHERE TopicID = @TopicID 
ORDER BY PostID DESC


UPDATE		cy_GroupTopics

SET			MostRecentPostUserID = @MostRecentPostUserID,
			TotalReplies = TotalReplies - 1,
			MostRecentPostDate = @MostRecentPostDate


WHERE		TopicID = @TopicID
GO
/****** Object:  StoredProcedure [dbo].[cy_GroupPosts_SelectAllByTopic]    Script Date: 11/10/2008 13:12:07 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
CREATE PROCEDURE [dbo].[cy_GroupPosts_SelectAllByTopic]

/*

An approach to paging grids in the database, hopefully more efficient than bringing back a zillion rows and
paging with a DataGrid using viewstate

TopicSequence is the integer order that postss were created within the topic

*/

@TopicID			int


AS


SELECT	p.*,
		ft.GroupID,
		'MostRecentPostUser' = COALESCE(u.[Name],'Guest'),
		'StartedBy' = COALESCE(s.[Name],'Guest'),
		'PostAuthor' = COALESCE(up.[Name], 'Guest'),
		'PostAuthorTotalPosts' = COALESCE(up.TotalPosts, 0),
		'PostAuthorAvatar' = up.AvatarUrl,
		'PostAuthorWebSiteUrl' = up.WebSiteURL,
		'PostAuthorSignature' = up.Signature


FROM		cy_GroupPosts p

JOIN		cy_GroupTopics ft
ON		p.TopicID = ft.TopicID

LEFT OUTER JOIN		cy_Users u
ON		ft.MostRecentPostUserID = u.UserID

LEFT OUTER JOIN		cy_Users s
ON		ft.StartedByUserID = s.UserID

LEFT OUTER JOIN		cy_Users up
ON		up.UserID = p.UserID

WHERE	ft.TopicID = @TopicID
		

ORDER BY	p.PostID
GO
/****** Object:  StoredProcedure [dbo].[cy_GroupPosts_SelectAllByTopicRevereSorted]    Script Date: 11/10/2008 13:12:08 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
CREATE PROCEDURE [dbo].[cy_GroupPosts_SelectAllByTopicRevereSorted]


@TopicID			int


AS


SELECT	p.*,
		ft.GroupID,
		'MostRecentPostUser' = COALESCE(u.[Name],'Guest'),
		'StartedBy' = COALESCE(s.[Name],'Guest'),
		'PostAuthor' = COALESCE(up.[Name], 'Guest'),
		'AuthorEmail' = COALESCE(up.[Email], ''),
		'PostAuthorTotalPosts' = COALESCE(up.TotalPosts, 0),
		'Trusted' = COALESCE(up.Trusted, 0),
		'PostAuthorAvatar' = up.AvatarUrl,
		'PostAuthorWebSiteUrl' = up.WebSiteURL,
		'PostAuthorSignature' = up.Signature


FROM		cy_GroupPosts p

JOIN		cy_GroupTopics ft
ON		p.TopicID = ft.TopicID

LEFT OUTER JOIN		cy_Users u
ON		ft.MostRecentPostUserID = u.UserID

LEFT OUTER JOIN		cy_Users s
ON		ft.StartedByUserID = s.UserID

LEFT OUTER JOIN		cy_Users up
ON		up.UserID = p.UserID

WHERE	ft.TopicID = @TopicID
		

ORDER BY	p.TopicSequence DESC
GO
/****** Object:  StoredProcedure [dbo].[cy_GroupPosts_SelectByTopic]    Script Date: 11/10/2008 13:12:08 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
CREATE PROCEDURE [dbo].[cy_GroupPosts_SelectByTopic]

/*

An approach to paging grids in the database, hopefully more efficient than bringing back a zillion rows and
paging with a DataGrid using viewstate

TopicSequence is the integer order that postss were created within the topic

*/

@TopicID			int,
@PageNumber			int

AS

DECLARE @PostsPerPage	int
--DECLARE @TotalPosts		int
DECLARE @CurrentPageMaxTopicSequence	int

DECLARE @BeginSequence int
DECLARE @EndSequence int



SELECT	@PostsPerPage = f.PostsPerPage
		--@TotalPosts = ft.TotalReplies

FROM		cy_GroupTopics ft

JOIN		cy_Groups f
ON		ft.GroupID = f.ItemID

WHERE	ft.TopicID = @TopicID

SET @CurrentPageMaxTopicSequence = (@PostsPerPage * @PageNumber) 
IF @CurrentPageMaxTopicSequence > @PostsPerPage
	BEGIN
		SET @BeginSequence = @CurrentPageMaxTopicSequence  - @PostsPerPage + 1
	END
ELSE
	BEGIN
		SET @BeginSequence = 1
	END

SET @EndSequence = @BeginSequence + @PostsPerPage  -1



SELECT	p.*,
		ft.GroupID,
		'MostRecentPostUser' = COALESCE(u.[Name],'Guest'),
		'StartedBy' = COALESCE(s.[Name],'Guest'),
		'PostAuthor' = COALESCE(up.[Name], 'Guest'),
		'AuthorEmail' = COALESCE(up.[Email], ''),
		'PostAuthorTotalPosts' = COALESCE(up.TotalPosts, 0),
		'Trusted' = COALESCE(up.Trusted, 0),
		'PostAuthorAvatar' = up.AvatarUrl,
		'PostAuthorWebSiteUrl' = up.WebSiteURL,
		'PostAuthorSignature' = up.Signature


FROM		cy_GroupPosts p

JOIN		cy_GroupTopics ft
ON		p.TopicID = ft.TopicID

LEFT OUTER JOIN		cy_Users u
ON		ft.MostRecentPostUserID = u.UserID

LEFT OUTER JOIN		cy_Users s
ON		ft.StartedByUserID = s.UserID

LEFT OUTER JOIN		cy_Users up
ON		up.UserID = p.UserID

WHERE	ft.TopicID = @TopicID
		AND p.TopicSequence >= @BeginSequence
		AND  p.TopicSequence <= @EndSequence

ORDER BY	p.SortOrder, p.PostID
GO
/****** Object:  StoredProcedure [dbo].[cy_Groups_RecalculatePostStats]    Script Date: 11/10/2008 13:12:11 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
CREATE PROCEDURE [dbo].[cy_Groups_RecalculatePostStats]

@GroupID		int


AS

DECLARE @RowsAffected		int
DECLARE @MostRecentPostDate	datetime
DECLARE @MostRecentPostUserID	int
DECLARE @PostCount			int

SET @RowsAffected = 0

SELECT TOP 1	@MostRecentPostDate = MostRecentPostDate,
		@MostRecentPostUserID = MostRecentPostUserID

FROM		cy_GroupTopics

WHERE	GroupID = @GroupID

ORDER BY	MostRecentPostDate DESC

SET @PostCount = COALESCE(
				(	SELECT 	SUM(TotalReplies) + COUNT(*)
					FROM		cy_GroupTopics
					WHERE	GroupID = @GroupID

				),
				0
				)

UPDATE 	cy_Groups
SET		MostRecentPostDate = @MostRecentPostDate,
		MostRecentPostUserID = @MostRecentPostUserID,
		PostCount = @PostCount

WHERE	ItemID = @GroupID

SET @RowsAffected = @@ROWCOUNT


SELECT @RowsAffected
GO
/****** Object:  StoredProcedure [dbo].[cy_GroupTopics_SelectByGroup]    Script Date: 11/10/2008 13:12:15 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[cy_GroupTopics_SelectByGroup]



@GroupID			int,
@PageNumber			int

AS

DECLARE @TopicsPerPage	int
DECLARE @CurrentPageMaxGroupSequence	int
DECLARE @BeginSequence int
DECLARE @EndSequence int

SELECT	@TopicsPerPage = TopicsPerPage
		
FROM		cy_Groups

WHERE	ItemID = @GroupID

SET @CurrentPageMaxGroupSequence = (@TopicsPerPage * @PageNumber)

IF @CurrentPageMaxGroupSequence > @TopicsPerPage + 1
	BEGIN
		SET @BeginSequence = @CurrentPageMaxGroupSequence  
- @TopicsPerPage + 1
	END
ELSE
	BEGIN
		SET @BeginSequence = 1
	END

SET @EndSequence = @BeginSequence + @TopicsPerPage  -1

SELECT	t.*,
		'MostRecentPostUser' = COALESCE(u.[Name], 'Guest'),
		'StartedBy' = s.[Name]


FROM		cy_GroupTopics t

LEFT OUTER JOIN		cy_Users u
ON		t.MostRecentPostUserID = u.UserID

LEFT OUTER JOIN		cy_Users s
ON		t.StartedByUserID = s.UserID

WHERE	t.GroupID = @GroupID
		AND t.GroupSequence 
Between @BeginSequence 
AND @EndSequence

ORDER BY	t.SortOrder, t.TopicID DESC
GO
/****** Object:  StoredProcedure [dbo].[cy_GroupTopics_SelectOne]    Script Date: 11/10/2008 13:12:16 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[cy_GroupTopics_SelectOne]

@TopicID		int


AS

SELECT		t.*,
			'MostRecentPostUser' = COALESCE(u.[Name], 'Guest'),
			'StartedBy' = COALESCE(s.[Name], 'Guest'),
			f.PostsPerPage


FROM			cy_GroupTopics t

LEFT OUTER JOIN	cy_Users u
ON			t.MostRecentPostUserID = u.UserID

LEFT OUTER JOIN	cy_Users s
ON			t.StartedByUserID = s.UserID

JOIN			cy_Groups f
ON			f.ItemID = t.GroupID

WHERE		t.TopicID = @TopicID
GO
/****** Object:  StoredProcedure [dbo].[cy_GroupTopics_SelectByGroupDesc]    Script Date: 11/10/2008 13:12:15 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
CREATE PROCEDURE [dbo].[cy_GroupTopics_SelectByGroupDesc]



@GroupID			int,
@PageNumber			int

AS

DECLARE @TopicsPerPage	int
DECLARE @TotalTopics	int
DECLARE @BeginSequence int
DECLARE @EndSequence int

SELECT	@TopicsPerPage = TopicsPerPage,
		@TotalTopics = TopicCount
FROM		cy_Groups
WHERE	ItemID = @GroupID


SET @BeginSequence = @TotalTopics - (@TopicsPerPage * @PageNumber) + 1
SET @EndSequence = @BeginSequence + @TopicsPerPage  -1

SELECT	t.*,
		'MostRecentPostUser' = u.[Name],
		'StartedBy' = s.[Name]


FROM		cy_GroupTopics t

LEFT OUTER JOIN		cy_Users u
ON		t.MostRecentPostUserID = u.UserID

LEFT OUTER JOIN		cy_Users s
ON		t.StartedByUserID = s.UserID

WHERE	t.GroupID = @GroupID
		AND t.GroupSequence 
Between @BeginSequence 
AND @EndSequence

ORDER BY	t.SortOrder, t.TopicID DESC
GO
/****** Object:  StoredProcedure [dbo].[cy_GroupTopics_Insert]    Script Date: 11/10/2008 13:12:15 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
CREATE PROCEDURE [dbo].[cy_GroupTopics_Insert]


@GroupID			int,
@TopicTitle		nvarchar(255),
@SortOrder			int,
@IsLocked			bit,
@StartedByUserID		int,
@TopicDate		datetime


AS
DECLARE @TopicID int
DECLARE @GroupSequence int
SET @GroupSequence = (SELECT COALESCE(Max(GroupSequence) + 1,1) FROM cy_GroupTopics WHERE GroupID = @GroupID)

INSERT INTO		cy_GroupTopics
(
			GroupID,
			TopicTitle,
			SortOrder,
			GroupSequence,
			IsLocked,
			StartedByUserID,
			TopicDate,
			MostRecentPostUserID,
			MostRecentPostDate

)

VALUES
(
			
			@GroupID,
			@TopicTitle,
			@SortOrder,
			@GroupSequence,
			@IsLocked,
			@StartedByUserID,
			@TopicDate,
			@StartedByUserID,
			@TopicDate


)

SELECT @TopicID = @@IDENTITY 


INSERT INTO cy_GroupTopicSubscriptions (TopicID, UserID)
	SELECT @TopicID, UserID FROM cy_GroupSubscriptions fs 
		WHERE fs.GroupID = @GroupID AND fs.SubscribeDate IS NOT NULL 
				AND fs.UnSubscribeDate IS NULL

SELECT @TopicID
GO
/****** Object:  StoredProcedure [dbo].[cy_GroupPosts_Delete]    Script Date: 11/10/2008 13:12:07 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
CREATE PROCEDURE [dbo].[cy_GroupPosts_Delete]


@PostID		int


AS

DELETE FROM cy_GroupPosts

WHERE PostID = @PostID
GO
/****** Object:  StoredProcedure [dbo].[cy_GroupPosts_UpdateSequence]    Script Date: 11/10/2008 13:12:09 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
CREATE PROCEDURE [dbo].[cy_GroupPosts_UpdateSequence]


@PostID			int,
@TopicSequence			int


AS

UPDATE		cy_GroupPosts

SET			TopicSequence = @TopicSequence


WHERE		PostID = @PostID
GO
/****** Object:  StoredProcedure [dbo].[cy_GroupPosts_Update]    Script Date: 11/10/2008 13:12:09 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
CREATE PROCEDURE [dbo].[cy_GroupPosts_Update]

@PostID			int,
@Subject			nvarchar(255),
@Post				ntext,
@SortOrder			int,
@Approved			bit

AS

UPDATE		cy_GroupPosts

SET			Subject = @Subject,
			Post = @Post,
			SortOrder = @SortOrder,
			Approved = @Approved


WHERE		PostID = @PostID
GO
/****** Object:  StoredProcedure [dbo].[cy_GroupPosts_Insert]    Script Date: 11/10/2008 13:12:07 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
CREATE PROCEDURE [dbo].[cy_GroupPosts_Insert]


@TopicID			int,
@Subject			nvarchar(255),
@Post				ntext,
@Approved			bit,
@UserID			int,
@PostDate		datetime



AS
DECLARE @TopicSequence int
SET @TopicSequence = (SELECT COALESCE(Max(TopicSequence) + 1,1) FROM cy_GroupPosts WHERE TopicID = @TopicID)



INSERT INTO		cy_GroupPosts
(
			TopicID,
			Subject,
			Post,
			Approved,
			UserID,
			TopicSequence,
			PostDate
)

VALUES
(
			@TopicID,
			@Subject,
			@Post,
			@Approved,
			@UserID,
			@TopicSequence,
			@PostDate

)

SELECT  @@IDENTITY As PostID
GO
/****** Object:  StoredProcedure [dbo].[cy_GroupPosts_SelectOne]    Script Date: 11/10/2008 13:12:08 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
CREATE PROCEDURE [dbo].[cy_GroupPosts_SelectOne]

@PostID		int

AS


SELECT	fp.*

FROM		cy_GroupPosts fp

WHERE	fp.PostID = @PostID
GO
/****** Object:  StoredProcedure [dbo].[cy_GroupPosts_SelectSortedTopic]    Script Date: 11/10/2008 13:12:09 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
CREATE PROCEDURE [dbo].[cy_GroupPosts_SelectSortedTopic]

@TopicID			int

AS

SELECT	*
		
FROM		cy_GroupPosts


WHERE	TopicID = @TopicID
		

ORDER BY	TopicSequence
GO
/****** Object:  StoredProcedure [dbo].[cy_GroupPosts_CountByTopic]    Script Date: 11/10/2008 13:12:07 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
CREATE PROCEDURE [dbo].[cy_GroupPosts_CountByTopic]

@TopicID		int



AS


SELECT	COUNT(*)

FROM		cy_GroupPosts

WHERE	TopicID = @TopicID
GO
/****** Object:  StoredProcedure [dbo].[cy_GroupTopicSubscriptions_Exists]    Script Date: 11/10/2008 13:12:18 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
CREATE PROCEDURE [dbo].[cy_GroupTopicSubscriptions_Exists]

    
@TopicID  	int,
@UserID		int

AS
IF EXISTS (	SELECT 	TopicSubscriptionID
		FROM		cy_GroupTopicSubscriptions
		WHERE	TopicID = @TopicID
				AND UserID = @UserID
				AND UnSubscribeDate is null )
SELECT 1
ELSE
SELECT 0
GO
/****** Object:  StoredProcedure [dbo].[cy_GroupTopicSubscriptions_UnsubscribeTopic]    Script Date: 11/10/2008 13:12:18 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
CREATE PROCEDURE [dbo].[cy_GroupTopicSubscriptions_UnsubscribeTopic]

@TopicID		int,
@UserID		int

AS

UPDATE		cy_GroupTopicSubscriptions

SET			UnSubscribeDate = GetDate()

WHERE		TopicID = @TopicID
			AND UserID = @UserID
GO
/****** Object:  StoredProcedure [dbo].[cy_GroupTopicSubscribers_SelectByTopic]    Script Date: 11/10/2008 13:12:17 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[cy_GroupTopicSubscribers_SelectByTopic]


@TopicID		int,
@CurrentPostUserID 	int


AS

SELECT		u.Email


FROM			cy_Users u

JOIN			cy_GroupTopicSubscriptions s
ON			u.UserID = s.UserID

WHERE		s.TopicID = @TopicID
			AND s.UnSubscribeDate IS NULL
			AND u.UserID <> @CurrentPostUserID
GO
/****** Object:  StoredProcedure [dbo].[cy_GroupTopicSubscriptions_UnsubscribeAllTopics]    Script Date: 11/10/2008 13:12:18 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
CREATE PROCEDURE [dbo].[cy_GroupTopicSubscriptions_UnsubscribeAllTopics]

@UserID		int

AS

UPDATE		cy_GroupTopicSubscriptions

SET			UnSubscribeDate = GetDate()

WHERE		
			UserID = @UserID
GO
/****** Object:  StoredProcedure [dbo].[cy_GroupTopicSubscriptions_Insert]    Script Date: 11/10/2008 13:12:18 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
CREATE PROCEDURE [dbo].[cy_GroupTopicSubscriptions_Insert]


@TopicID		int,
@UserID		int


AS

IF EXISTS (SELECT UserID FROM cy_GroupTopicSubscriptions WHERE TopicID = @TopicID AND UserID = @UserID)
BEGIN
	UPDATE 	cy_GroupTopicSubscriptions

	SET		SubscribeDate = GetDate(),
			UnSubscribeDate = Null
	

	WHERE 	TopicID = @TopicID AND UserID = @UserID

END

ELSE

BEGIN

	INSERT INTO	cy_GroupTopicSubscriptions
	(
			TopicID,
			UserID
	)
	VALUES
	(
			@TopicID,
			@UserID
	)

END
GO
/****** Object:  StoredProcedure [dbo].[cy_Groups_DecrementPostCount]    Script Date: 11/10/2008 13:12:09 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
CREATE PROCEDURE [dbo].[cy_Groups_DecrementPostCount]


@GroupID		int

AS


UPDATE cy_Groups

SET PostCount = PostCount - 1

WHERE ItemID = @GroupID
GO
/****** Object:  StoredProcedure [dbo].[cy_Groups_Insert]    Script Date: 11/10/2008 13:12:11 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[cy_Groups_Insert]


@ModuleID			int,
@UserID			int,
@Title          			nvarchar(100),
@Description    			ntext,
@IsModerated			bit,
@IsActive			bit,
@SortOrder			int,
@PostsPerPage			int,
@TopicsPerPage		int,
@AllowAnonymousPosts		bit



AS

INSERT INTO			cy_Groups
(
				ModuleID,
				CreatedBy,
				Title,
				[Description],
				IsModerated,
				IsActive,
				SortOrder,
				PostsPerPage,
				TopicsPerPage,
				AllowAnonymousPosts

)

VALUES
(
				@ModuleID,
				@UserID,
				@Title,
				@Description,
				@IsModerated,
				@IsActive,
				@SortOrder,
				@PostsPerPage,
				@TopicsPerPage,
				@AllowAnonymousPosts

)

SELECT @@IDENTITY As ItemID
GO
/****** Object:  StoredProcedure [dbo].[cy_Groups_Update]    Script Date: 11/10/2008 13:12:12 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[cy_Groups_Update]


@ItemID			int,
@Title          			nvarchar(100),
@Description    			ntext,
@IsModerated			bit,
@IsActive			bit,
@SortOrder			int,
@PostsPerPage			int,
@TopicsPerPage		int,
@AllowAnonymousPosts		bit



AS


UPDATE		cy_Groups

SET			Title = @Title,
			[Description] = @Description,
			IsModerated = @IsModerated,
			IsActive = @IsActive,
			SortOrder = @SortOrder,
			PostsPerPage = @PostsPerPage,
			TopicsPerPage = @TopicsPerPage,
			AllowAnonymousPosts = @AllowAnonymousPosts



WHERE		ItemID = @ItemID
GO
/****** Object:  StoredProcedure [dbo].[cy_Groups_Select]    Script Date: 11/10/2008 13:12:12 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[cy_Groups_Select]

@ModuleID			int,
@UserID				int

AS


SELECT		f.*,
			'MostRecentPostUser' = u.[Name],
			'Subscribed' = CASE WHEN s.[SubscribeDate] IS NOT NULL and s.[UnSubscribeDate] IS NULL THEN 1
					Else 0
					End

FROM			cy_Groups f

LEFT OUTER JOIN	cy_Users u
ON			f.MostRecentPostUserID = u.UserID

LEFT OUTER JOIN cy_GroupSubscriptions s
on			f.ItemID = s.GroupID and s.UserID = @UserID

WHERE		f.ModuleID	= @ModuleID
			AND f.IsActive = 1

ORDER BY		f.SortOrder, f.ItemID
GO
/****** Object:  StoredProcedure [dbo].[cy_Groups_IncrementTopicCount]    Script Date: 11/10/2008 13:12:10 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
CREATE PROCEDURE [dbo].[cy_Groups_IncrementTopicCount]

@GroupID			int

AS

UPDATE		cy_Groups

SET			TopicCount = TopicCount + 1

WHERE		ItemID = @GroupID
GO
/****** Object:  StoredProcedure [dbo].[cy_Groups_DecrementTopicCount]    Script Date: 11/10/2008 13:12:10 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
CREATE PROCEDURE [dbo].[cy_Groups_DecrementTopicCount]

@GroupID			int

AS

UPDATE		cy_Groups

SET			TopicCount = TopicCount - 1

WHERE		ItemID = @GroupID
GO
/****** Object:  StoredProcedure [dbo].[cy_Groups_IncrementPostCount]    Script Date: 11/10/2008 13:12:10 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
CREATE PROCEDURE [dbo].[cy_Groups_IncrementPostCount]

@GroupID			int,
@MostRecentPostUserID	int,
@MostRecentPostDate datetime

AS
UPDATE 	cy_Groups

SET 		MostRecentPostDate = @MostRecentPostDate,
		MostRecentPostUserID = @MostRecentPostUserID,
 		PostCount = PostCount + 1

WHERE 	ItemID = @GroupID
GO
/****** Object:  StoredProcedure [dbo].[cy_Groups_IncrementPostCountOnly]    Script Date: 11/10/2008 13:12:10 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
CREATE PROCEDURE [dbo].[cy_Groups_IncrementPostCountOnly]

@GroupID			int


AS


UPDATE 	cy_Groups

SET 		
 		PostCount = PostCount + 1

WHERE 	ItemID = @GroupID
GO
/****** Object:  StoredProcedure [dbo].[cy_Groups_UpdateTopicStats]    Script Date: 11/10/2008 13:12:13 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
CREATE PROCEDURE [dbo].[cy_Groups_UpdateTopicStats]

@GroupID			int

AS

UPDATE		cy_Groups

SET			TopicCount = TopicCount + 1

WHERE		ItemID = @GroupID
GO
/****** Object:  StoredProcedure [dbo].[cy_Groups_UpdatePostStats]    Script Date: 11/10/2008 13:12:13 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
CREATE PROCEDURE [dbo].[cy_Groups_UpdatePostStats]


@GroupID			int,
@MostRecentPostUserID	int

AS

UPDATE	cy_Groups

SET		MostRecentPostDate = GetDate(),
		MostRecentPostUserID = @MostRecentPostUserID,
		PostCount = PostCount + 1

WHERE	ItemID = @GroupID
GO
/****** Object:  StoredProcedure [dbo].[cy_Groups_SelectOne]    Script Date: 11/10/2008 13:12:12 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[cy_Groups_SelectOne]


@ItemID			int

AS

SELECT		f.*,
			'CreatedByUser' = u.[Name],
			'MostRecentPostUser' = up.[Name]

FROM			cy_Groups f

LEFT OUTER JOIN	cy_Users u
ON			f.CreatedBy = u.UserID

LEFT OUTER JOIN	cy_Users up
ON			f.MostRecentPostUserID = up.UserID

WHERE		f.ItemID = @ItemID
GO
/****** Object:  StoredProcedure [dbo].[cy_GroupTopics_SelectByGroupDesc_v2]    Script Date: 11/10/2008 13:12:16 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
CREATE PROCEDURE [dbo].[cy_GroupTopics_SelectByGroupDesc_v2]


@GroupID			int,
@PageNumber			int

AS

DECLARE @TopicsPerPage	int
DECLARE @TotalTopics	int
DECLARE @BeginSequence int
DECLARE @EndSequence int

SELECT	@TopicsPerPage = TopicsPerPage,
		@TotalTopics = TopicCount
FROM		cy_Groups
WHERE	ItemID = @GroupID


SET @BeginSequence = @TotalTopics - (@TopicsPerPage * @PageNumber) + 1
SET @EndSequence = @BeginSequence + @TopicsPerPage  -1

CREATE TABLE #PageIndex 
(
	IndexID int IDENTITY (1, 1) NOT NULL,
	TopicID int
	
)

INSERT INTO #PageIndex (TopicID)


SELECT	t.TopicID
FROM		cy_GroupTopics t
WHERE	t.GroupID = @GroupID	
ORDER BY	t.MostRecentPostDate 


SELECT	t.*,
		'MostRecentPostUser' = u.[Name],
		'StartedBy' = s.[Name]


FROM		cy_GroupTopics t

JOIN		#PageIndex p
ON		p.TopicID = t.TopicID

LEFT OUTER JOIN		cy_Users u
ON		t.MostRecentPostUserID = u.UserID

LEFT OUTER JOIN		cy_Users s
ON		t.StartedByUserID = s.UserID

WHERE	t.GroupID = @GroupID
		AND p.IndexID
Between @BeginSequence 
AND @EndSequence

ORDER BY	p.IndexID DESC

DROP TABLE #PageIndex
GO
/****** Object:  StoredProcedure [dbo].[cy_GroupSubscriptions_Insert]    Script Date: 11/10/2008 13:12:13 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
CREATE PROCEDURE [dbo].[cy_GroupSubscriptions_Insert]

@GroupID		int,
@UserID		int


AS

IF EXISTS (SELECT UserID FROM cy_GroupSubscriptions WHERE GroupID = @GroupID AND UserID = @UserID)
BEGIN
	UPDATE 	cy_GroupSubscriptions

	SET		SubscribeDate = GetDate(),
			UnSubscribeDate = Null
	

	WHERE 	GroupID = @GroupID AND UserID = @UserID

END

ELSE

BEGIN

	INSERT INTO	cy_GroupSubscriptions
	(
			GroupID,
			UserID
	)
	VALUES
	(
			@GroupID,
			@UserID
	)

END
GO
/****** Object:  StoredProcedure [dbo].[cy_GroupSubscriptions_Unsubscribe]    Script Date: 11/10/2008 13:12:14 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
CREATE PROCEDURE [dbo].[cy_GroupSubscriptions_Unsubscribe]

@GroupID		int,
@UserID		int

AS

UPDATE		cy_GroupSubscriptions

SET			UnSubscribeDate = GetDate()

WHERE		GroupID = @GroupID
			AND UserID = @UserID
GO
/****** Object:  StoredProcedure [dbo].[cy_GroupSubscriptions_Exists]    Script Date: 11/10/2008 13:12:13 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
CREATE PROCEDURE [dbo].[cy_GroupSubscriptions_Exists]

    
@GroupID  	int,
@UserID		int

AS
IF EXISTS (	SELECT 	SubscriptionID
		FROM		cy_GroupSubscriptions
		WHERE	GroupID = @GroupID
				AND UserID = @UserID
				AND UnSubscribeDate is null )
SELECT 1
ELSE
SELECT 0
GO
/****** Object:  ForeignKey [FK_cy_GroupPosts_cy_GroupTopics]    Script Date: 11/10/2008 13:12:22 ******/
ALTER TABLE [dbo].[cy_GroupPosts]  WITH CHECK ADD  CONSTRAINT [FK_cy_GroupPosts_cy_GroupTopics] FOREIGN KEY([TopicID])
REFERENCES [dbo].[cy_GroupTopics] ([TopicID])
GO
ALTER TABLE [dbo].[cy_GroupPosts] CHECK CONSTRAINT [FK_cy_GroupPosts_cy_GroupTopics]
GO
/****** Object:  ForeignKey [FK_cy_GroupTopics_cy_Groups]    Script Date: 11/10/2008 13:12:33 ******/
ALTER TABLE [dbo].[cy_GroupTopics]  WITH CHECK ADD  CONSTRAINT [FK_cy_GroupTopics_cy_Groups] FOREIGN KEY([GroupID])
REFERENCES [dbo].[cy_Groups] ([ItemID])
GO
ALTER TABLE [dbo].[cy_GroupTopics] CHECK CONSTRAINT [FK_cy_GroupTopics_cy_Groups]
GO
/****** Object:  ForeignKey [FK_cy_GroupTopicSubscriptions_cy_GroupTopics]    Script Date: 11/10/2008 13:12:35 ******/
ALTER TABLE [dbo].[cy_GroupTopicSubscriptions]  WITH CHECK ADD  CONSTRAINT [FK_cy_GroupTopicSubscriptions_cy_GroupTopics] FOREIGN KEY([TopicID])
REFERENCES [dbo].[cy_GroupTopics] ([TopicID])
GO
ALTER TABLE [dbo].[cy_GroupTopicSubscriptions] CHECK CONSTRAINT [FK_cy_GroupTopicSubscriptions_cy_GroupTopics]
GO
