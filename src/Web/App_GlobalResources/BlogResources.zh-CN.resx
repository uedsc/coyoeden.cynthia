<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BlogAddCategoriesLabel" xml:space="preserve">
    <value>添加分类</value>
  </data>
  <data name="BlogAddCategoryButton" xml:space="preserve">
    <value>添加分类</value>
  </data>
  <data name="BlogAddPostLabel" xml:space="preserve">
    <value>添加文章</value>
  </data>
  <data name="BlogAllowComments" xml:space="preserve">
    <value>允许评论:</value>
  </data>
  <data name="BlogArchivesLabel" xml:space="preserve">
    <value>档案</value>
  </data>
  <data name="BlogArchivesPrefixLabel" xml:space="preserve">
    <value>来自</value>
  </data>
  <data name="BlogAuthorEmailSetting" xml:space="preserve">
    <value>作者电子邮件</value>
  </data>
  <data name="BlogAuthorEmailSettingRegexWarning" xml:space="preserve">
    <value>必须输入有效的邮件地址</value>
  </data>
  <data name="BlogAuthorSetting" xml:space="preserve">
    <value>作者</value>
  </data>
  <data name="BlogBeginDateRequiredHelp" xml:space="preserve">
    <value>必须输入有效的开始时间</value>
  </data>
  <data name="BlogCategoriesLabel" xml:space="preserve">
    <value>分类</value>
  </data>
  <data name="BlogCategoriesPrefixLabel" xml:space="preserve">
    <value>类别:</value>
  </data>
  <data name="BlogCommentCommentLabel" xml:space="preserve">
    <value>评论</value>
  </data>
  <data name="BlogCommentCountLabel" xml:space="preserve">
    <value>评论</value>
  </data>
  <data name="BlogCommentPostCommentButton" xml:space="preserve">
    <value>提交</value>
  </data>
  <data name="BlogCommentRemeberMeLabel" xml:space="preserve">
    <value>记住我?</value>
  </data>
  <data name="BlogCommentsClosedMessage" xml:space="preserve">
    <value>评论被关闭.</value>
  </data>
  <data name="BlogCommentsNotAllowed" xml:space="preserve">
    <value>不允许</value>
  </data>
  <data name="BlogCommentSolveQuestionMessage" xml:space="preserve">
    <value>回答问题  通过验证</value>
  </data>
  <data name="BlogCommentsUnlimited" xml:space="preserve">
    <value>无限的</value>
  </data>
  <data name="BlogCommentTitleLabel" xml:space="preserve">
    <value>标题</value>
  </data>
  <data name="BlogCommentUrlLabel" xml:space="preserve">
    <value>网址</value>
  </data>
  <data name="BlogCommentUserNameLabel" xml:space="preserve">
    <value>名字</value>
  </data>
  <data name="BlogCopyrightSetting" xml:space="preserve">
    <value>版权</value>
  </data>
  <data name="BlogDateTimeFormatString" xml:space="preserve">
    <value>yyyy- MM-dd</value>
  </data>
  <data name="BlogDeleteCategoryWarning" xml:space="preserve">
    <value>删除此分类?</value>
  </data>
  <data name="BlogDeleteCommentWarning" xml:space="preserve">
    <value>删除此评论?</value>
  </data>
  <data name="BlogDeletePostWarning" xml:space="preserve">
    <value>删除此博客文章?</value>
  </data>
  <data name="BlogDescriptionSetting" xml:space="preserve">
    <value>描述</value>
  </data>
  <data name="BlogEditAllowedCommentsForDaysPrefix" xml:space="preserve">
    <value>允许评论</value>
  </data>
  <data name="BlogEditCancelButton" xml:space="preserve">
    <value>取消</value>
  </data>
  <data name="BlogEditCategoriesLabel" xml:space="preserve">
    <value>编辑分类</value>
  </data>
  <data name="BlogEditCategoryLabel" xml:space="preserve">
    <value>分类:</value>
  </data>
  <data name="BlogEditCommentsDaysLabel" xml:space="preserve">
    <value>天</value>
  </data>
  <data name="BlogEditDeleteButton" xml:space="preserve">
    <value>删除此项</value>
  </data>
  <data name="BlogEditDescriptionLabel" xml:space="preserve">
    <value>描述:</value>
  </data>
  <data name="BlogEditEntryLabel" xml:space="preserve">
    <value>博客文章</value>
  </data>
  <data name="BlogEditEntryLink" xml:space="preserve">
    <value>编辑</value>
  </data>
  <data name="BlogEditIncludeInFeedLabel" xml:space="preserve">
    <value>包含在 Feed中?:</value>
  </data>
  <data name="BlogEditorHeightSetting" xml:space="preserve">
    <value>编辑器高度</value>
  </data>
  <data name="BlogEditSelectedCategoriesLabel" xml:space="preserve">
    <value>选择的分类</value>
  </data>
  <data name="BlogEditStartDateLabel" xml:space="preserve">
    <value>开始时间:</value>
  </data>
  <data name="BlogEditTitleLabel" xml:space="preserve">
    <value>标题:</value>
  </data>
  <data name="BlogEditUpdateButton" xml:space="preserve">
    <value>更新</value>
  </data>
  <data name="BlogEntriesToShowSetting" xml:space="preserve">
    <value>显示设置</value>
  </data>
  <data name="BlogEntriesToShowSettingRegexWarning" xml:space="preserve">
    <value> 必须设定显示的条目数,默认为10</value>
  </data>
  <data name="BlogEntryCountLabel" xml:space="preserve">
    <value>文章</value>
  </data>
  <data name="BlogFeatureName" xml:space="preserve">
    <value>博客</value>
  </data>
  <data name="BlogFeedbackLabel" xml:space="preserve">
    <value>反馈</value>
  </data>
  <data name="BlogModuleAddToGoogleLink" xml:space="preserve">
    <value>添加到 Google</value>
  </data>
  <data name="BlogModuleAddToMyMSNLink" xml:space="preserve">
    <value>添加到我的 MSN</value>
  </data>
  <data name="BlogModuleAddToMyYahooLink" xml:space="preserve">
    <value>添加到我的 Yahoo</value>
  </data>
  <data name="BlogModuleAddToWindowsLiveLink" xml:space="preserve">
    <value>添加到  Windows Live</value>
  </data>
  <data name="BlogNavigationOnRightSetting" xml:space="preserve">
    <value>导航在右侧?</value>
  </data>
  <data name="BlogRSSCacheTimeSetting" xml:space="preserve">
    <value>RSS 缓存(分钟)</value>
  </data>
  <data name="BlogRSSCacheTimeSettingRegexWarning" xml:space="preserve">
    <value> 必须输入一个整数值，默认为120</value>
  </data>
  <data name="BlogRSSLinkTitle" xml:space="preserve">
    <value>RSS</value>
  </data>
  <data name="BlogShowAddFeedLinksSetting" xml:space="preserve">
    <value>显示添加反馈连接?</value>
  </data>
  <data name="BlogShowArchiveSetting" xml:space="preserve">
    <value>显示档案?</value>
  </data>
  <data name="BlogShowCalendarSetting" xml:space="preserve">
    <value>显示日历?</value>
  </data>
  <data name="BlogShowCategoriesSetting" xml:space="preserve">
    <value>显示分类?</value>
  </data>
  <data name="BlogShowFeedLinksSetting" xml:space="preserve">
    <value>显示反馈连接?</value>
  </data>
  <data name="BlogShowStatisticsSetting" xml:space="preserve">
    <value>显示统计?</value>
  </data>
  <data name="BlogStatisticsLabel" xml:space="preserve">
    <value>统计</value>
  </data>
  <data name="BlogUseCommentSpamBlocker" xml:space="preserve">
    <value>允许拦截垃圾邮件:</value>
  </data>
  <data name="BlogUseLinkForHeading" xml:space="preserve">
    <value>以连接呈现标题</value>
  </data>
</root>