<?xml version="1.0"?>
<configuration>
	<configSections>
		<!-- Comment this out in Medium Trust -->
		<section name="neatUpload" type="Brettle.Web.NeatUpload.ConfigSectionHandler, Brettle.Web.NeatUpload" allowLocation="true"/>
		<sectionGroup name="system.web"></sectionGroup>
		<sectionGroup name="system.web.extensions" type="System.Web.Configuration.SystemWebExtensionsSectionGroup, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35">
			<sectionGroup name="scripting" type="System.Web.Configuration.ScriptingSectionGroup, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35">
				<section name="scriptResourceHandler" type="System.Web.Configuration.ScriptingScriptResourceHandlerSection, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" requirePermission="false" allowDefinition="MachineToApplication"/>
				<sectionGroup name="webServices" type="System.Web.Configuration.ScriptingWebServicesSectionGroup, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35">
					<section name="jsonSerialization" type="System.Web.Configuration.ScriptingJsonSerializationSection, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" requirePermission="false" allowDefinition="Everywhere"/>
					<section name="profileService" type="System.Web.Configuration.ScriptingProfileServiceSection, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" requirePermission="false" allowDefinition="MachineToApplication"/>
					<section name="authenticationService" type="System.Web.Configuration.ScriptingAuthenticationServiceSection, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" requirePermission="false" allowDefinition="MachineToApplication"/>
					<section name="roleService" type="System.Web.Configuration.ScriptingRoleServiceSection, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" requirePermission="false" allowDefinition="MachineToApplication"/>
				</sectionGroup>
			</sectionGroup>
		</sectionGroup>
	</configSections>
	<!-- application specific settings -->
	<!-- 
  Ideally, any settings from the appSettings section that you customise should go into user.config
  if you create a user.config file and put it in the root
	of the web, you can put custom app settings like connections strings there
	and they won't be overwritten by svn update or by upgrades. user.config is not under source control
	there is a sample user.config.sample you can use as a basis but don't raname this file, 
	create your own
	user.config and copy from the sample 
	 
	settings in user.config will take precedence over settings in web.config
	but changes to user.config will not be detected automatically or cause app to restart
	so if you make a change there, enter a space in web.config and save to make it pickup
	your change in user.config
		-->
	<appSettings file="user.config">
		<!-- after initial installation its a good idea to set this to true. If you sign in as admin before doing upgrades you can leave this as false.-->
		<add key="DisableSetup" value="false"/>
		<add key="ShowConnectionErrorOnSetup" value="true"/>
		<add key="AlwaysUrlEncode" value="false"/>
		<!-- <add key="UseClosestAsciiCharsForUrls" value="true" /> can help for languages that use similar alphabets to English -->
		<add key="UseClosestAsciiCharsForUrls" value="false"/>
		<!-- ******* Database Settings ***********************************  -->
		<!-- Note that each db platform  has its own connection string, but the database used depends on which data dlls are in the bin folder
          it is not determined by configuration settings. 
    -->
		<!-- MS SQL Database Settings *************************************** -->
		<add key="MSSQLConnectionString" value="server=yourservername;UID=yourdatabaseusername;PWD=yourdatabaseuserpassword;database=yourdatabasename"/>
		<add key="SqlAzureConnectionString" value="Server=yourserver.database.windows.net;Database=yourdatabasename;User ID=youruser;Password=yourpassword;Trusted_Connection=False;"/>
		<!-- 
		For using MS SQL set this to true for best performance but if running the web on mono you may need to set this to false. -->
		<add key="CacheMSSQLParameters" value="true"/>
		<!-- do not change this unless you understand the workings of the code
			  and have a reason to change it. -->
		<add key="MSSQLOwnerPrefix" value="[dbo]."/>
		<!-- end MS SQL Database Settings *************************************** -->
		<add key="MySqlConnectionString" value="Data Source=localhost;Database=CynthiaDB;User ID=Cuser;Password=C123;Charset=utf8;"/>
		<add key="SqliteConnectionString" value="defaultdblocation"/>
		<!--
			you can use a fully qualified file path as shown below
			or if you are using the default db at /Data/sqlitedb/Cynthia.db.config
			just leave this set to "defaultdblocation"
		<add key="SqliteConnectionString" value="version=3,URI=file:C:\\Projects\Cynthia\Web\Data\sqlitedb\Cynthia.db" />
		-->
		<!-- ******* End Database Settings *********************************** -->
		<!-- ******* global security settings -->
		<add key="EnableOpenIDAuthentication" value="true"/>
		<!-- these settings can override sitesettings -->
		<add key="UseOpenIdRpxSettingsFromWebConfig" value="false"/>
		<add key="OpenIdRpxApiKey" value=""/>
		<add key="OpenIdRpxApplicationName" value=""/>
		<add key="OpenIdRpxUseMappings" value="true"/>
		<!-- 
    if true then when using email for sign in, on the registration page new users don't have to choose a username 
    less form fields to fill out may be more user friendly
    -->
		<add key="AutoGenerateAndHideUserNamesWhenUsingEmailForLogin" value="false"/>
		<add key="EnableWindowsLiveAuthentication" value="true"/>
		<add key="GloballyDisableMemberUseOfWindowsLiveMessenger" value="false"/>
		<add key="AllowPersistentLoginCookie" value="true"/>
		<add key="AllowPasswordFormatChange" value="true"/>
		<add key="SSLIsAvailable" value="false"/>
		<add key="SSLIsRequiredByWebServer" value="false"/>
		<add key="MaskPasswordsInUserAdmin" value="true"/>
		<!-- Default to All Users role, i.e public pages by default -->
		<add key="DefaultPageRoles" value="All Users;"/>
		<add key="AllowUserProfilePage" value="true"/>
		<add key="AllowUserTopicBrowsing" value="true"/>
		<add key="NotifyAdminsOnNewUserRegistration" value="false"/>
		<add key="EnforceContentVersioningGlobally" value="false"/>
		<add key="HideModuleSettingsGeneralAndSecurityTabsFromNonAdmins" value="false"/>
		<!-- a comma separated list of email addresses to exclude when sending
    administrative emails including registration notifications and content workflow submissions
    this is for when you have admin user accounts that you do not want to receive these emails
     
    -->
		<add key="EmailAddressesToExcludeFromAdminNotifications" value=""/>
		<add key="DisableWorkflowNotification" value="false"/>
		<add key="EnableLogViewer" value="true"/>
		<add key="ShowGroupPostsInMemberList" value="true"/>
		<!-- this should generally be false on public sites but on an intranet you may wish to show the user email -->
		<add key="ShowEmailInMemberList" value="false"/>
		<add key="ShowLoginNameInMemberList" value="false"/>
		<add key="ShowUserIDInMemberList" value="false"/>
		<add key="DisableFileManager" value="false"/>
		<add key="AllowFileManagerInChildSites" value="true"/>
		<add key="AllowedMediaFileExtensions" value=".flv|.swf|.wmv|.mp3|.mp4|.asf|.asx|.avi|.mov|.mpeg|.mpg"/>
		<add key="AllowedUploadFileExtensions" value=".gif|.jpg|.jpeg|.png|.flv|.swf|.wmv|.mp3|.mp4|.tif|.asf|.asx|.avi|.mov|.mp eg|.mpg|.zip|.pdf|.doc|.docx|.xls|.xlsx|.ppt|.pptx|.csv|.txt"/>
		<add key="AllowedLessPriveledgedUserUploadFileExtensions" value=".gif|.jpg|.jpeg|.png|.zip"/>
		<add key="ForceLowerCaseForFolderCreation" value="true"/>
		<add key="ForceLowerCaseForUploadedFiles" value="true"/>
		<add key="ResizeImageDefaultMaxWidth" value="550"/>
		<add key="ResizeImageDefaultMaxHeight" value="550"/>
		<add key="AllowAdminsToUseDataFolder" value="false"/>
		<add key="ForceAdminsToUseMediaFolder" value="false"/>
		<add key="UserFolderDiskQuotaInMegaBytes" value="300"/>
		<add key="MediaFolderDiskQuotaInMegaBytes" value="6000"/>
		<add key="AdminDiskQuotaInMegaBytes" value="12000"/>
		<add key="UserFolderMaxSizePerFileInMegaBytes" value="10"/>
		<add key="MediaFolderMaxSizePerFileInMegaBytes" value="30"/>
		<add key="AdminMaxSizePerFileInMegaBytes" value="2000"/>
		<add key="UserFolderMaxNumberOfFiles" value="1000"/>
		<add key="MediaFolderMaxNumberOfFiles" value="10000"/>
		<add key="AdminMaxNumberOfFiles" value="100000"/>
		<add key="UserFolderMaxNumberOfFolders" value="50"/>
		<add key="MediaFolderMaxNumberOfFolders" value="500"/>
		<add key="AdminMaxNumberOfFolders" value="1000"/>
		<!-- if a user is in a role that allows both uploading and deleting then they will have access to the main file manager
    in some cases you may want to allow users who can only upload to user specific folders to delete files from the editor file browser
    without giving them access to the general File Manager, to do that you could set this to true
    -->
		<add key="AllowDeletingFilesFromUserFolderWithoutDeleteRole" value="false"/>
		<!-- 
    <add key="ImageGalleryUseMediaFolder" value="false" />
    this is false for backward compatibility with existing galleries located at
    /Data/Sites/[SiteID]/GalleryImages
    the preferred setting for new installations is true and this stores the images under
    /Data/Sites/[SiteID]/media/GalleryImages which is better for making the images available for borwsing in the editor
    you can change this to true in user.config and copy files from the old location to make an existing site use the new preferred location
    -->
		<add key="ImageGalleryUseMediaFolder" value="false"/>
		<add key="EnableDeveloperMenuInAdminMenu" value="false"/>
		<add key="EnableQueryTool" value="false"/>
		<!-- you should not change this unless you implemented your own custom login page -->
		<add key="LoginPageRelativeUrl" value="/Secure/Login.aspx"/>
		<!-- 
    Set Enable ForceSingleSessionPerUser to true only if it is a security requirement of your app to prevent
    a user having multiple browser sessions with the same user.
    This uses session variables and therefore uses more server memory so it is disabled by default.
    -->
		<add key="ForceSingleSessionPerUser" value="false"/>
		<!-- 
    Generally you should leave this blank and let Cynthia handle the redirecting after a user signs in.
    However if you want to force redirecting to some specific page you can force it with this setting:
    <add key="PageToRedirectToAfterSignIn" value="/yourcustompage.aspx" />
    Warning! Do not use this in a multi site installation. This is a global setting and will affect all sites.
    -->
		<add key="PageToRedirectToAfterSignIn" value=""/>
		<!-- 
    if set to true query parser errors in the search engine will trigger banning of ip
    address of the host causing the error. These are usually spambots posting a lot of 
    garbage into the search form, only real concern
    about setting this to true is if the spambots are spoofing ip addresses then we are 
    banning the wrong address.
    -->
		<add key="AutoBanSpambotsOnSearchErrors" value="false"/>
		<add key="DisableSearchIndex" value="false"/>
		<!-- if there are any searchable fetures installed that you don't want to appear in the filter list you can
    enter comma separated featureGuids here.
    -->
		<add key="SearchableFeatureGuidsToExclude" value=""/>
		<!-- these next 3 settings have defaults that are backward compatible so the search will still work correctly on 
    upgraded sites
    <add key="EnableSearchResultsHighlighting" value="false" />
    <add key="DisableSearchFeatureFilters" value="true" />
    <add key="SearchUseBackwardCompatibilityMode" value="true" />
    
    for new installations or if you rebuild the search index, then you can change to these settings:
    <add key="EnableSearchResultsHighlighting" value="true" />
    <add key="DisableSearchFeatureFilters" value="false" />
    <add key="SearchUseBackwardCompatibilityMode" value="false" />
    
    keep in mind that if you EnableSearchResultsHighlighting, then it stores a copy of all content in the search index
    which makes it much larger on disk but is the only way to be able to supp0ort results highlighting
    
    -->
		<add key="EnableSearchResultsHighlighting" value="false"/>
		<add key="DisableSearchFeatureFilters" value="true"/>
		<add key="SearchUseBackwardCompatibilityMode" value="true"/>
		<add key="SearchResultsFragmentSize" value="300"/>
		<add key="ShowRebuildSearchIndexButtonToAdmins" value="false"/>
		<add key="ShowModuleTitleInSearchResultLink" value="false"/>
		<!-- DisableTaskQueue - if you are running multiple sites from different physical installations but using the same database
    it can cause problems because each installation is trying to process the task queue. 
    In this case you should disable it in all except 1 of the installations.
    -->
		<add key="DisableTaskQueue" value="false"/>
		<!-- 
    You can change this setting to customize the message body for the password recovery email.
    <add key="PasswordRecoveryEmailTemplateFileNamePattern" value="PasswordEmailMessage.config" />
    Your actual file must exist in the /Data/MessageTemplates folder and the actual file must 
    be named with the default culture as a prefix to this setting. So for the default setting
    PasswordEmailMessage.config, the actual file name will be en-US-PasswordEmailMessage.config
    if the default cutlure is en-US
    Whenever you upgrade Cynthia this file will be overwritten so if you customize it, you should
    use a custom file name. So for example you could set the setting like this:
    <add key="PasswordRecoveryEmailTemplateFileNamePattern" value="MyCustomPasswordEmailMessage.config" />
    and the actual file name would be en-US-MyCustomPasswordEmailMessage.config, assuming you are using
    en-US for the default site culture.
   
    -->
		<add key="PasswordRecoveryEmailTemplateFileNamePattern" value="PasswordEmailMessage.config"/>
		<!-- 
			If true will update user lastactivity time at the end of each authenticated request.
			The default is true, but if you are seeking max performance you can disable it.
		-->
		<add key="TrackAuthenticatedRequests" value="true"/>
		<add key="TrackIPForAuthenticatedRequests" value="false"/>
		<!-- silverlight settings 
    SilverlightClientKey is a token used to identify the silverlight app to the server, for logging and other purposes.
    We don't want other people's copy of the app to be able to log to our server. 
    Best to generate your own new guid and put it in user.config
    -->
		<add key="SilverlightClientKey" value="7863555f-18a2-49a9-be62-464367010895"/>
		<add key="UseNeatHtmlForXSSPrevention" value="true"/>
		<add key="UseClientSideNeatHtml" value="true"/>
		<!-- ******* end global security settings -->
		<!-- ******* multi site installation settings -->
		<add key="AllowMultipleSites" value="true"/>
		<add key="AllowDeletingChildSites" value="false"/>
		<add key="DeleteSiteFolderWhenDeletingSites" value="false"/>
		<!--      
    UseRelatedSiteMode means all sites in a multi site installation use the same users
    all users must have a site id so in this mode we use the same site id for all users
    -->
		<add key="UseRelatedSiteMode" value="false"/>
		<add key="RelatedSiteID" value="1"/>
		<add key="RelatedSiteModeHideRoleManagerInChildSites" value="true"/>
		<add key="AllowPasswordFormatChangeInChildSites" value="false"/>
		<add key="ShowSystemInformationInChildSiteAdminMenu" value="true"/>
		<add key="UseFoldersInsteadOfHostnamesForMultipleSites" value="false"/>
		<add key="DisallowedVirtualFolderNames" value="Admin;ClientScript;Controls;Data;FCKeditor;Modules;NeatHtml;NeatUpload;Secure;Services;Setup;WebStore"/>
		<add key="EnableSSLInChildSites" value="false"/>
		<!--   
    if you want to have different smtp settings per site, set EnableSiteSettingsSmtpSettings to true
    and smtp settings will appear in SiteSettings. otherwise use the smtp settings below
    -->
		<add key="EnableSiteSettingsSmtpSettings" value="false"/>
		<add key="MaskSmtpPasswordInSiteSettings" value="true"/>
		<add key="ShowSmtpEncodingOption" value="false"/>
		<!-- ******* end multi site installation settings -->
		<!-- ******* email settings 
    Note you also need to specify smtp settings further below in system.net section the settings here appply to features but
    the settings in the system.net.mailsettigns section are used by site registration and password recovery -->
		<add key="DisableDotNetOpenMail" value="true"/>
		<add key="SMTPServer" value="localhost"/>
		<add key="SMTPRequiresAuthentication" value="false"/>
		<add key="SMTPUseSsl" value="false"/>
		<add key="SMTPPort" value="25"/>
		<add key="SMTPUser" value="UserName"/>
		<add key="SMTPPassword" value="UPassword"/>
		<add key="SMTPTimeoutInMilliseconds" value="30000"/>
		<!-- leave this blank for ascii encoding, allowed values are utf-8, utf-32, and unicode -->
		<add key="SmtpPreferredEncoding" value=""/>
		<!-- ******* end email settings -->
		<!-- ******* general global settings -->
		<add key="RunningInMediumTrust" value="false"/>
		<!-- Clock Hours = 12 or 24 affects only the jsCalendar DatePicker -->
		<add key="ClockHours" value="12"/>
		<!-- this should be the preferred timezone offset to display for unauthenticated users -->
		<add key="PreferredGreenwichMeantimeOffset" value="-5.00"/>
		<!-- this setting allows you to force specific cultures for specific sites
			  I recommend that you don't do this unless you have a specific reason to.
			You would also need to know the siteid of each site and specify it here like this:
				<add key="site1culture" value="en-US" />
				<add key="site2culture" value="nl-NL" />
			  -->
		<add key="UseCultureOverride" value="false"/>
		<add key="DefaultCountry" value="US"/>
		<add key="EnableNewsletter" value="true"/>
		<!-- if true shows a button instead of immediately opting out when the user clics the unsubscribe link in newsletter -->
		<add key="PromptBeforeUnsubscribeNewsletter" value="false"/>
		<!-- if you don't have the group installed you can/should set this to false -->
		<add key="ShowGroupUnsubscribeLinkInUserManagement" value="true"/>
		<add key="MemberListPageSize" value="15"/>
		<add key="SearchResultsPageSize" value="10"/>
		<add key="FolderGalleryPreviewWidth" value="500"/>
		<add key="UseSiteNameForRootBreadcrumb" value="false"/>
		<add key="HideMenusOnLoginPage" value="true"/>
		<add key="HideMenusOnRegisterPage" value="true"/>
		<add key="HideMenusOnPasswordRecoveryPage" value="true"/>
		<add key="HideMenusOnChangePasswordPage" value="true"/>
		<add key="HideAllMenusOnProfilePage" value="false"/>
		<add key="HidePageMenuOnProfilePage" value="true"/>
		<add key="HideAllMenusOnMyPage" value="false"/>
		<add key="HideMenusOnSiteMap" value="true"/>
		<add key="HidePageMenusOnSiteMap" value="true"/>
		<!-- format for page titles, valid options: TitleOnly, SitePlusTitle, TitlePlusSite   -->
		<add key="PageTitleFormatName" value="SitePlusTitle"/>
		<add key="PageTitleSeparatorString" value=" - "/>
		<add key="ModuleTitleTag" value="h2"/>
		<!-- showing css validation link makes people think there are important errors 
    because we use some vendor specific and some CSS 3 (which is not yet finalized but is supported to extent in browsers) -->
		<add key="DisableCssValidatorLink" value="false"/>
		<add key="DisableHtmlValidatorLink" value="false"/>
		<!-- 
    If you route/rewrite requests for robots.txt to robots.ashx, then you can have a different robots file for ssl
    by default it wil block indexing of all secure pages assuming it is respected by the crawler and the crawler
    actually requests robots.txt for https separately from http 
    -->
		<add key="RobotsConfigFile" value="~/robots.config"/>
		<add key="RobotsSslConfigFile" value="~/robots.ssl.config"/>
		<!--  
    Set AutoSetContentType to false if you would rather add the meta ContentType yourself in layout.master file of your skin
    if true the MetaContentControl will render it according to the ContentMimeType and ContentEncoding settings
    Changed the default from application/xhtml+xml to text/html as of Cynthia version 2.3.1.3 Html 5 now seems the future rather than Xhtml
    -->
		<add key="AutoSetContentType" value="true"/>
		<add key="ContentMimeType" value="text/html"/>
		<add key="ContentEncoding" value="utf-8"/>
		<!-- if you would like to append the date to your blog post urls in format yyyy-mm-dd 
    set this to true. This can also be useful if you are hsoting alot of blogs because it can help
    avoid url collisions if more than one blog uses the same post title (unless they post it on the same day too)
    -->
		<add key="AppendDateToBlogUrls" value="false"/>
		<!-- 
    if enabled supporting ecommerce features (like WebStore and Event Calendar Pro) may display a button that allows
    rebuilding the data in the cy_CommerceReport table for the given module instance.
    it will only be visible to admin users.
    Generally this table should stay in sync and not need rebuilding.
    This table also provides the data for the user order history in MyAccount, so use this button judiciously.
    If data is not correctly rebuilt the user may no longer be able to download or see purchase history.
    The main reason for the existence of the button at all is for upgrading from previous versions when you already have order history
    that occurred before the cy_CommerceReport feature was added to Cynthia core.
    -->
		<add key="ShowRebuildReportsButton" value="false"/>
		<!-- 
    if set to true, users in the siteSettings.CommerceReportRoles will be able to see user revenue total in groups
    next to a user's posts
    -->
		<add key="ShowRevenueInGroups" value="false"/>
		<!-- 
    woopra has to approve your account before you should add the woopra code to the page 
    you can enable woopra in site settings. enabling it here supercedes the site settings setting
    -->
		<add key="EnableWoopraGlobally" value="false"/>
		<add key="DisableWoopraGlobally" value="false"/>
		<!-- 
    Setting these to true will make it possible to edit additional meta and pageencoding.
    WARNING
    I recommend you leave this hidden and do not change these settings.
    If a user enters something wrong in these settings it can
    break the site and the only way to fix it will be removing the bad data directly from the db.
    Also I don't recommend changing the page encoding from what have as the default.
    If you do change it then you may experience skinning problems or
    javascript problems or captchas not working. 
    -->
		<add key="ShowAdditionalMeta" value="false"/>
		<add key="ShowPageEncoding" value="false"/>
		<!-- Gravatars 
    http://www.gravatar.com/ is a service that allows users to have the same Avatar across different sites.
    I implemented support for this in Cynthia 2008-08-13
    I added this setting as a kill switch so that Gravatars can be disabled installation wide
    in case there is ever a security or performance problem due to using this external service.
    I don't expect any problems but just in case you can disable it here.
    RatingType { G, PG, R, X } determine what rating is acceptable. Users rate their Avatars like movies.
    -->
		<add key="GravatarMaxAllowedRating" value="G"/>
		<add key="AvatarsCanOnlyBeUploadedByAdmin" value="false"/>
		<add key="ForceSquareAvatars" value="true"/>
		<add key="AvatarMaxWidth" value="90"/>
		<add key="AvatarMaxHeight" value="90"/>
		<!-- 
    original images uploaded for avatars 
    larger than the maxoriginal settings will be resized even before cropping to avoid mega large images being stored
    -->
		<add key="AvatarMaxOriginalWidth" value="800"/>
		<add key="AvatarMaxOriginalHeight" value="800"/>
		<add key="DefaultBlogPageSize" value="10"/>
		<add key="DefaultInitialSkin" value="styleshout-techmania"/>
		<add key="UseGreyBoxProgressForNeatUpload" value="false"/>
		<!-- 
			 <add key="CProfileConfigFileName" value="CProfile.config" />
				  	  
			 This file needs tobe in the root of the web folder, but you can use an
			 alternate file with your own profile options or edit the CProfile.config file
			to use your own custom options. See http://www.vivasky.com/userprofileconfiguration.aspx
					    
			There is also a setting below in the system.web section for
			<CProfile configSource="CProfile.config"></CProfile>
			if you set that to the same value as the setting immediately below
			then the web application will recycle automatically if you edit the
			specified file. This will ensure your customizations are used right away.
      
      for multi site installations if you need different profile customizations per site.
      create settings like this:
      
      <add key="CProfileConfigFileName-2" value="CProfile2.config"/>
      where the -2 means for siteid 2, put the site id of the one you want to customize
      you can create settngs for each site
      
			 -->
		<add key="CProfileConfigFileName" value="CProfile.config"/>
		<!-- 
			 In general practice english letters are used for urls
			and domain names must be in english letters.
			For cultures that do no use english letters you
			may wish to disable the friendly url autosuggestion
			feature by setting this variable to false. 
			 -->
		<add key="AutoSuggestFriendlyUrls" value="true"/>
		<add key="ForceFriendlyUrlsToLowerCase" value="true"/>
		<add key="RedirectHomeFromSetupPagesWhenSystemIsUpToDate" value="true"/>
		<!-- When page level skinning is enabled, if this is true, then pages created 
			  beneath a page that has a specific skin assigned
			  will use the same skin by default
			  -->
		<add key="AssignNewPagesParentPageSkinByDefault" value="true"/>
		<!-- 
			Disabling viewstate at the page level can reduce the size of the page
			which improves performance. Modules that do postback usually need 
			ViewState Enabled so in the Page_Load event of modules that postback
			I add a line of code like this
			Page.EnableViewState = true;
			This works fine for all the built in modules but I've had at least one
			developer tell me it did not work for his custom modules so I added this
			setting here which you can set to false if you find it breaks any functionality
			in your custom modules. If it doesn't break anything I recommend leaving this
			set to true
		-->
		<add key="DisablePageViewStateByDefault" value="true"/>
		<add key="DisableHelpSystem" value="false"/>
		<!-- 
			AllowChangingFriendlyUrlPattern should almost always be false
			which means friendly urls will end with .aspx which is required in
			most configuration. The only time this would ever be changed to true is
			when running on Mono if Mono is set to handle all requests then page names don't
			have to end with .aspx
		-->
		<add key="AllowChangingFriendlyUrlPattern" value="false"/>
		<add key="RSSCSS" value="/Data/style/rss1.css"/>
		<add key="RSSXsl" value="/Data/xsl/rss1.xsl"/>
		<!-- leave this true as we really don't have moderation implemented yet -->
		<add key="PostsApprovedByDefault" value="True"/>
		<add key="UseUrlReWriting" value="true"/>
		<add key="UseShortcutKeys" value="false"/>
		<add key="UseIconsForAdminLinks" value="true"/>
		<add key="UsePageImagesInSiteMap" value="false"/>
		<add key="UseTextLinksForFeatureSettings" value="true"/>
		<!-- SiteOffice feature this is not yet implemented so leave it false for this version of Cynthia   -->
		<add key="UseSiteMailFeature" value="false"/>
		<add key="UseOfficeFeature" value="false"/>
		<add key="UseExternalMailFeature" value="true"/>
		<add key="UseSilverlightSiteOffice" value="false"/>
		<add key="AllowAttachmentsInSiteMailFeature" value="true"/>
		<add key="AllowAttachmentsInExternalMailFeature" value="true"/>
		<!-- end SiteOffice section -->
		<add key="NumberOfWebPartsToShowInMiniCatalog" value="15"/>
		<add key="SiteStatistics_ShowMemberStatistics_Default" value="true"/>
		<add key="SiteStatistics_ShowOnlineStatistics_Default" value="true"/>
		<add key="SiteStatistics_ShowOnlineMembers_Default" value="true"/>
		<add key="AssembliesNotSearchedForWebParts" value="AjaxControlToolkit.dll Argotic.Common.dll Argotic.Core.dll Argotic.Extensions.dll Brettle.Web.NeatHtml.dll Brettle.Web.NeatHtmlTools.dll Brettle.Web.NeatUpload.dll Brettle.Web.NeatUpload.GreyBoxProgressBar.dll CookComputing.XmlRpcV2.dll CSSFriendly.dll DayPilot.dll DotNetOpenAuth.dll DotNetOpenMail.dll GCheckout.dll log4net.dll Lucene.Net.dll MetaDataExtractor.dll Microsoft.Web.Preview.dll Cynthia.Business.dll Cynthia.Business.WebHelpers.dll Cynthia.Data.dll Cynthia.Net.dll Cynthia.Web.Controls.dll Cynthia.Web.dll Cynthia.Web.Editor.dll Cynthia.Web.Framework.dll MySql.Data.dll Newtonsoft.Json.dll Novell.Directory.Ldap.dll OpenPOP.dll Org.Mentalis.Security.dll Cynthia.Modules.Business.dll Cynthia.Modules.Data.dll Cynthia.Modules.UI.dll Recaptcha.dll RSS.NET.dll SharpMimeTools.dll sqlite3.dll Subkismet.dll System.Web.Extensions.dll WebStore.Business.dll WebStore.Data.dll WebStore.UI.dll Mono.Data.Sqlite.dll Mono.Security.dll TimelineNet.dll ZedGraph.dll ZedGraph.Web.dll"/>
		<!--      
    if you have a low traffic site (if 20 minutes may go by between requests for pages)
    then what happens is the application pool shuts down the web application after 20 minutes
    goes by with no request for any pages.
    Then when you get a new request all the JIT compilation must happen again
    and this causes a slow response.     
    You can mitigate this for a slow site by setting this to true. A background topic will be spawned that
    makes a request to the site often enough to keep the application pool from shutting down the application
    due to lack of traffic.
    For sites that are getting enough traffic its best to leave this as false.
    If using IIS 7 with Integrated Pipeline mode then you must specify the url to the root of your site in
    AppKeepAliveUrl like http://yoursiteroot/Default.aspx
    -->
		<add key="UseAppKeepAlive" value="false"/>
		<add key="AppKeepAliveUrl" value=""/>
		<add key="GetAlphaPagerCharsFromResourceFile" value="false"/>
		<add key="AlphaPagerChars" value="ABCDEFGHIJKLMNOPQRSTUVWXYZ"/>
		<add key="CombineCSS" value="true"/>
		<add key="MinifyCSS" value="true"/>
		<add key="CacheCssOnServer" value="true"/>
		<add key="CacheCssInBrowser" value="true"/>
		<add key="UseGoogleCDN" value="true"/>
		<add key="GoogleCDNYUIVersion" value="2.6.0"/>
		<add key="GoogleCDNjQueryVersion" value="1.4.2"/>
		<add key="GoogleCDNjQueryUIVersion" value="1.7.2"/>
		<!-- 
    <add key="AlwaysLoadYuiTabs" value="false" />
    if you want to be able to use YUI tabs within your content you should set this to true
    otherwise its best to leave it false so that less javascript and css is loaded in the page
    we also load the jquery ui tabs so it seems unneeded to always load the yui tabs
    we do use them in admin pages but we can make it load there by settings properties on the CBasePage
    -->
		<add key="AlwaysLoadYuiTabs" value="false"/>
		<add key="DisableASPThemes" value="false"/>
		<add key="ExtJsBasePath" value="~/ClientScript/ext-2.0.2/"/>
		<add key="ExtJsDefaultTheme" value="resources/css/xtheme-slate.css"/>
		<add key="ExtJsDefaultWindowHeight" value="550"/>
		<add key="ExtJsDefaultWindowWidth" value="100%"/>
		<add key="ExtJsDefaultWindowTop" value="200"/>
		<add key="ExtJsDefaultWindowLeft" value="0"/>
		<add key="YUIBasePath" value="~/ClientScript/yui260/"/>
		<add key="YUITabCss" value="~/ClientScript/yui260/assets/skins/sam/tabview.css"/>
		<add key="YUISkinImagePath" value="/ClientScript/yui260/assets/skins/sam/"/>
		<add key="YUIDefaultSkinFolder" value="sam"/>
		<add key="YUIDefaultSkinClass" value="yui-skin-sam"/>
		<add key="DisableYUI" value="false"/>
		<add key="jQueryBasePath" value="~/ClientScript/jquery132/"/>
		<add key="jQueryUIBasePath" value="~/ClientScript/jqueryui16b/"/>
		<add key="SwfObjectUrl" value="~/ClientScript/SwfObject/2.2/swfobject.js"/>
		<add key="CSSFriendly-JavaScript-Path" value="~/ClientScript/CSSFriendly"/>
		<add key="FCKeditor:Debug" value="false"/>
		<add key="FCKeditor:CustomConfigPath" value="~/ClientScript/Cynthiafckconfig.js"/>
		<add key="FCKeditor:StylesXmlPath" value="/Services/EditorStyles.ashx"/>
		<add key="FCKeditor:BasePath" value="~/ClientScript/fckeditor266/"/>
		<!-- valid options for FCKeditor:Skin are default, office2003, silver -->
		<add key="FCKeditor:Skin" value="default"/>
		<add key="CKEditor:BasePath" value="~/ClientScript/ckeditor32/"/>
		<add key="CKEditor:ConfigPath" value="~/ClientScript/ckeditor-Cynthiaconfig.js"/>
		<!-- valid options for CKeditor:Skin are kama, v2, office2003-->
		<add key="CKEditor:Skin" value="v2"/>
		<add key="EditAreaBasePath" value="~/ClientScript/edit_area0811/"/>
		<add key="TinyMCE:BasePath" value="~/ClientScript/tiny_mce331/"/>
		<!--- valid options for the TinyMCE skin are: default, o2k7default, o2k7silver, o2k7black -->
		<add key="TinyMCE:Skin" value="default"/>
		<add key="TinyMCE:ConfigFile" value="CTinyMCE.config"/>
		<!-- leave this blank to use the skin css in the editor which is generally the best approach 
    but if you need to you can specify a different url for css to use in the editor
    -->
		<add key="EditorCssUrlOverride" value=""/>
		<add key="GoogleAnalyticsMemberLabel" value="member-type"/>
		<add key="GoogleAnalyticsMemberTypeAnonymous" value="anonymous"/>
		<add key="GoogleAnalyticsMemberTypeAuthenticated" value="member"/>
		<add key="GoogleAnalyticsMemberTypeCustomer" value="customer"/>
		<add key="GoogleAnalyticsMemberTypeAdmin" value="admin"/>
		<add key="CEditorConfigFileName" value="CEditor.config"/>
		<add key="SiteOfficeConfigFolder" value="~/SiteOffice/Config/"/>
		<add key="SetupHeaderConfigPath" value="~/Setup/SetupHeader.config"/>
		<!-- 
			Valid values for RecatchaTheme are red, white, blackglass
			  -->
		<add key="RecaptchaTheme" value="white"/>
		<!--   
		2007-12-04 this is global so it doesn't work for multi site installations of Cynthia.
		On my to do list is to add a site setting for this so it can be used in multi site installations easily.
		If you want to be able to use google maps in your site uing the LocationMap control, you need to get
		a google maps api key for your site from here:
		http://code.google.com/apis/maps/signup.html
		  
		-->
		<add key="GoogleMapsAPIKey" value=""/>
		<!-- ******* end general global settings -->
		<!-- ******* Begin WebStore Settings 
     Settings are site specific and prefixed per site with 'Site' + SiteID.ToString() + '-' ie Site1-, Site2-, Site3-
    -->
		<!-- set to false for production use -->
		<add key="Site1-PaymentGatewayUseTestMode" value="false"/>
		<!-- options: Authorize.NET, PlugNPay, PayPalDirect, PayPalStandard, GoogleCheckout-->
		<add key="Site1-PrimaryPaymentGateway" value=""/>
		<add key="Site1-PayPalUsePayPalStandard" value="true"/>
		<!-- sandbox -->
		<add key="Site1-AuthorizeNetSandboxAPILogin" value=""/>
		<add key="Site1-AuthorizeNetSandboxAPITransactionKey" value=""/>
		<add key="Site1-PlugNPaySandboxAPIPublisherName" value=""/>
		<add key="Site1-PlugNPaySandboxAPIPublisherPassword" value=""/>
		<add key="Site1-PayPalSandboxAPIUsername" value=""/>
		<add key="Site1-PayPalSandboxAPIPassword" value=""/>
		<add key="Site1-PayPalSandboxAPISignature" value=""/>
		<add key="Site1-PayPalStandardSandboxEmail" value=""/>
		<add key="Site1-PayPalStandardSandboxPDTId" value=""/>
		<add key="Site1-GoogleSandboxMerchantID" value=""/>
		<add key="Site1-GoogleSandboxMerchantKey" value=""/>
		<!-- end sandbox -->
		<!-- Production -->
		<add key="Site1-AuthorizeNetProductionAPILogin" value=""/>
		<add key="Site1-AuthorizeNetProductionAPITransactionKey" value=""/>
		<add key="Site1-PlugNPayProductionAPIPublisherName" value=""/>
		<add key="Site1-PlugNPayProductionAPIPublisherPassword" value=""/>
		<add key="Site1-PayPalProductionAPIUsername" value=""/>
		<add key="Site1-PayPalProductionAPIPassword" value=""/>
		<add key="Site1-PayPalProductionAPISignature" value=""/>
		<add key="Site1-PayPalStandardProductionEmail" value=""/>
		<add key="Site1-PayPalStandardProductionPDTId" value=""/>
		<add key="Site1-GoogleProductionMerchantID" value=""/>
		<add key="Site1-GoogleProductionMerchantKey" value=""/>
		<!-- end production -->
		<!--
  This is temprary until I implement something better. The file must be located at
  /Data/MessageTemplates and must be prefixed with a culture like en-US- even though that part is not
  specifiied here. So even though we have entered DefaultOrderConfirmationPlainTextEmailTemplate.config, the 
  actual file must be named en-US-DefaultOrderConfirmationPlainTextEmailTemplate.config where en-US is the default
  culture for the site as specified in Web.config globalization element
  -->
		<add key="Site1-ConfirmationEmailPlainTextTemplate" value="DefaultOrderConfirmationPlainTextEmailTemplate.config"/>
		<add key="Site1-ConfirmationEmailSubjectTemplate" value="DefaultOrderConfirmationEmailSubjectTemplate.config"/>
		<!-- ******* end WebStore Settings -->
		<!-- ******* general web configuration -->
		<add key="Custom404Page" value="/PageNotFound.aspx"/>
		<add key="EnableGoogle404Enhancement" value="true"/>
		<add key="SuppressMenuOnBuiltIn404Page" value="true"/>
		<!-- 
			if users will be accessing your site on a port other
			than port 80
			set MapAlternatePort to true so that links will
			include the port.
			set MapAlternatePort to false if you are using a proxy server 
			that doesn't add X-Forwarded-Host headers (most do).
			This setting has no effect if you are using port 80,
			the standard web port.
			this must also be true for debugging with the VS Web server 
			as it uses alternate ports    
        -->
		<add key="MapAlternatePort" value="true"/>
		<add key="MapAlternateSSLPort" value="true"/>
		<add key="AlternateSSLPort" value="443"/>
		<!-- if using a proxy and it prevents detection of ssl
        it can cause an infinite loop in the SiteUtils.ForceSSL function
        set this to true to prevent that if you encounter this problem
        -->
		<add key="ProxyPreventsSSLDetection" value="false"/>
		<!-- 
    AllowForcingPreferredHostName, if set to true a new Site Setting appears (only in root site or IsServerAdminSite)
    for entering a preferred host name. The reason this is disabled by default and only available from within the
    server admin site is because putting an invalid host name in this site setting can make the site inaccessible
    as it will keep redirecting to an incorrect host name. So this is only for expert use, but is useful in cases where
    you may have a site that responds to multiple host names like Cynthia.org, vivasky.com, www.vivasky.com
    and you want to always force a specific one. For example, my ssl certificate only matches www.vivasky.com
    so I want to force the sue of that host name by redirecting to it if a request comes in for a different host name.
    -->
		<add key="DisableContentCache" value="true"/>
		<add key="AllowForcingPreferredHostName" value="false"/>
		<add key="SiteSettingsCacheDurationInSeconds" value="360"/>
		<add key="MenuCacheDurationInSeconds" value="360"/>
		<add key="DefaultModuleCacheDurationInSeconds" value="360"/>
		<add key="WebPageInfoCacheMinutes" value="20"/>
		<!-- ******* end general web configuration -->
		<!-- ******* settings you should leave alone -->
		<add key="FolderGalleryRequiredPath" value="FolderGalleries"/>
		<add key="FolderGalleryCachePath" value="~/Data/systemfiles"/>
		<!-- only named colors like White, Black, Blue etc can be used here -->
		<add key="FolderGalleryImageBackColor" value="Black"/>
		<add key="FolderGalleryImageBorderColor" value="Black"/>
		<!-- these images are located in the /Data/SiteImages folder -->
		<add key="AdminImage" value="key.png"/>
		<add key="PageTreeImage" value="sitemap.png"/>
		<add key="NewPageImage" value="page_white_add.png"/>
		<add key="EditPageFeaturesImage" value="page_white_edit.png"/>
		<add key="EditPageSettingsImage" value="page_white_wrench.png"/>
		<add key="EditContentImage" value="pencil.png"/>
		<add key="DeleteLinkImage" value="trash.png"/>
		<add key="EditPropertiesImage" value="wrench.png"/>
		<add key="CancelUploadImage" value="cancel.png"/>
		<add key="RefreshImage" value="refresh.png"/>
		<add key="StopRefreshImage" value="stop_refresh.png"/>
		<add key="RSSImageFileName" value="feed.png"/>
		<add key="GroupTopicImage" value="folder.png"/>
		<!-- EditPageSettingsImage
    this tells mono to leave out these files from JIT compilation 
    we need this because WebParts are not implemented in Mono
    -->
		<add key="MonoAspnetBatchCompileIgnorePaths" value="~/MyPage.aspx,~/Modules/WebPartModule.ascx,~/Admin/WebPartAdmin.aspx,~/Admin/WebPartEdit.aspx,~/Admin/WebPartModuleEdit.aspx"/>
		<!--theme settings-->
		<add key="ShowSkinRestoreButtonInSiteSettings" value="true"/>
		<!--/theme settings-->
		<!-- ******* end settings you should leave alone -->
		<!--pages that don't show the search input box-->
		<add key="NOSearchBoxUrls" value="Login.aspx,Register.aspx,RecoverPassword.aspx"/>
	</appSettings>
	<system.web>
		<!-- 
		Note for best practice you should replace this machine key with one you generate.
		If you use encrypted passwords, don't change the machine key after that or you will not
		be able to decrypt passwords.
		To generate your own, you can use this nice online utility:
		http://www.aspnetresources.com/tools/keycreator.aspx
		or this newer one which is more up to date as of 1/4/2007:
		http://www.developmentnow.com/articles/machinekey_generator.aspx
	
		-->
		<machineKey validationKey="09728A644F3F44EF6F0A9C94C4D5A1252823D7CAAB41C3DDA5B6029E22AF1E2F50B0F627219E94CB74B4073837D2E3F491D1061EAB4E4593EBFB2953A8B0BBF8" decryptionKey="F7112BA8E9C89DBDB8540D8704ED1FD9DEFAFE12EDE68538FDA9386B70BB2566" validation="SHA1" decryption="AES"/>
		<xhtmlConformance mode="Strict"/>
		<!--
        example culture settings
                 
        af-ZA Africaans South Africa
        bg-BG Bulgarian Bulgaria - need to fix the datepicker .js file
        zh-CN Chinese China - need to fix the datepicker .js file
		    zh-CHS Simplified Chinese
        cs-CZ Czech
        en-US English US
        en-GB English United Kingdom
        es-ES Spanish Spain
        es-MX Spanish Mexico
        el-GR Greek Greece 
        da-DK Danish Denmark
        de-DE German Germany
        fi-FI Finnish Finland
        fr-FR French France
        fr-CA French Canada
        he-IL Hebrew Israel - need to fix the datepicker .js file
        it-IT Italian Italy
        ko-KR Korean Korea - need to fix the datepicker .js file
        nl-NL Dutch Netherlands
        nl-BG Dutch Belgium
        pt-BR Portuguese Brazil
        pl-PL Polish Poland
        sv-SE Swedish Sweden
        sv-FI Swedish Finland
        ru-RU Russian Russia
		tr-TR Turkish Turkey
                       
        more complete list here    
        http://msdn.microsoft.com/en-us/library/system.globalization.cultureinfo.aspx
                 
		auto:en-US causes asp.net to try and find resources for the prefered language
		in the browser settings with fallback to the default culture, en-US in this example
    the default culture must not have any missing keys in the resource files
    en-US is the only language with no missing keys in the resource files so you should
    leave the default as en-US
        -->
		<globalization culture="auto:en-US" uiCulture="auto:en-US" requestEncoding="utf-8" responseEncoding="utf-8" fileEncoding="iso-8859-15"/>
		<siteMap configSource="CSiteMap.config"/>
		<webParts>
			<personalization defaultProvider="CPersonalizationProvider">
				<providers>
					<clear/>
					<add name="CPersonalizationProvider" type="Cynthia.Web.CPersonalizationProvider"/>
				</providers>
				<authorization>
					<allow roles="Admins" verbs="enterSharedScope"/>
				</authorization>
			</personalization>
		</webParts>
		<membership defaultProvider="CMembershipProvider" userIsOnlineTimeWindow="20">
			<providers>
				<clear/>
				<add name="CMembershipProvider" type="Cynthia.Web.CMembershipProvider"/>
			</providers>
		</membership>
		<roleManager enabled="true" defaultProvider="CRoleProvider">
			<providers>
				<clear/>
				<add name="CRoleProvider" type="Cynthia.Web.CRoleProvider"/>
			</providers>
		</roleManager>
		<pages validateRequest="false" enableViewStateMac="false" viewStateEncryptionMode="Auto" maxPageStateFieldLength="100">
			<namespaces>
				<add namespace="System.Linq"/>
				<add namespace="System.Globalization"/>
				<add namespace="Cynthia.Business"/>
				<add namespace="Cynthia.Business.WebHelpers"/>
				<add namespace="Cynthia.Web"/>
				<add namespace="Cynthia.Web.Controls"/>
				<add namespace="Cynthia.Web.Framework"/>
				<add namespace="Cynthia.Web.UI"/>
				<add namespace="Resources"/>
			</namespaces>
			<controls>
				<add tagPrefix="vs" namespace="SystemX.WebControls" assembly="SystemX.Web"/>
				<add tagPrefix="portal" namespace="Cynthia.Web.UI" assembly="Cynthia.Web"/>
				<add tagPrefix="cy" namespace="Cynthia.Web.Controls" assembly="Cynthia.Web.Controls"/>
				<add tagPrefix="cye" namespace="Cynthia.Web.Editor" assembly="Cynthia.Web.Editor"/>
				<add tagPrefix="ext" namespace="Cynthia.Web.Controls.ExtJs" assembly="Cynthia.Web.Controls"/>
				<add tagPrefix="goog" namespace="Cynthia.Web.Controls.google" assembly="Cynthia.Web.Controls"/>
				<add tagPrefix="portal" tagName="ChildPageMenu" src="~/Controls/ChildPageMenu.ascx"/>
				<add tagPrefix="portal" tagName="Breadcrumbs" src="~/Controls/BreadcrumbsControl.ascx"/>
				<add tagPrefix="portal" tagName="SearchInput" src="~/Controls/SearchInput.ascx"/>
				<add tagPrefix="portal" tagName="SiteMenu" src="~/Controls/SiteMenu.ascx"/>
				<add tagPrefix="portal" tagName="StyleSheet" src="~/Controls/StyleSheet.ascx"/>
				<add tagPrefix="portal" tagName="StyleSheetCombiner" src="~/Controls/StyleSheetCombiner.ascx"/>
				<add tagPrefix="portal" tagName="MetaContent" src="~/Controls/MetaContent.ascx"/>
				<add tagPrefix="portal" tagName="PageMenu" src="~/Controls/PageMenu.ascx"/>
				<add tagPrefix="portal" tagName="MembershipStatistics" src="~/Controls/MembershipStatisticsControl.ascx"/>
				<add tagPrefix="portal" tagName="OnlineStatistics" src="~/Controls/OnlineStatisticsControl.ascx"/>
				<add tagPrefix="portal" tagName="OnlineMemberList" src="~/Controls/OnlineMemberListControl.ascx"/>
				<add tagPrefix="portal" tagName="ModuleWrapper" src="~/Controls/ModuleWrapper.ascx"/>
				<add tagPrefix="portal" tagName="OpenIDLoginControl" src="~/Controls/OpenIDLoginControl.ascx"/>
				<add tagPrefix="portal" tagName="WindowsLiveLoginControl" src="~/Controls/WindowsLiveLoginControl.ascx"/>
				<add tagPrefix="portal" tagName="SubscriberPreferences" src="~/Controls/SubscriberPreferencesControl.ascx"/>
				<add tagPrefix="portal" tagName="GCheckoutLogList" src="~/Controls/GCheckoutLogList.ascx"/>
				<add tagPrefix="portal" tagName="OrderStatusSetting" src="~/Controls/OrderStatusSetting.ascx"/>
				<add tagPrefix="portal" tagName="PaymentAcceptanceMark" src="~/Controls/PaymentAcceptanceMark.ascx"/>
				<add tagPrefix="portal" tagName="SignInOrRegisterPrompt" src="~/Controls/SignInOrRegisterPrompt.ascx"/>
				<add tagPrefix="portal" tagName="PageLastModified" src="~/Controls/PageLastModified.ascx"/>
				<add tagPrefix="portal" tagName="CRating" src="~/Controls/CRating.ascx"/>
				<add tagPrefix="portal" tagName="ColorSetting" src="~/Controls/ColorSetting.ascx"/>
				<add tagPrefix="portal" tagName="GMapTypeSetting" src="~/Controls/GMapTypeSetting.ascx"/>
				<add tagPrefix="portal" tagName="GMapZoomLevelSetting" src="~/Controls/GMapZoomLevelSetting.ascx"/>
				<add tagPrefix="portal" tagName="Woopra" src="~/Controls/WoopraScript.ascx"/>
				<add tagPrefix="portal" tagName="ImageCropper" src="~/Controls/ImageCropper.ascx"/>
				<add tagPrefix="portal" tagName="Subscribe" src="~/Controls/Subscribe.ascx"/>
				<add namespace="Brettle.Web.NeatUpload" assembly="Brettle.Web.NeatUpload" tagPrefix="NeatUpload"/>
				<add namespace="Brettle.Web.NeatUpload" assembly="Brettle.Web.NeatUpload.GreyBoxProgressBar" tagPrefix="GreyBoxUpload"/>
				<add namespace="Brettle.Web.NeatHtml" assembly="Brettle.Web.NeatHtml" tagPrefix="NeatHtml"/>
				<add namespace="DayPilot.Web.Ui" assembly="DayPilot" tagPrefix="dp"/>
				<add namespace="TimelineNet" assembly="TimelineNet" tagPrefix="tl"/>
				<add namespace="AjaxControlToolkit" assembly="AjaxControlToolkit" tagPrefix="ajaxToolkit"/>
				<!-- 
        <add namespace="AjaxControlToolkit.HTMLEditor" assembly="AjaxControlToolkit" tagPrefix="HTMLEditor" />
        -->
				<add namespace="ZedGraph.Web" assembly="ZedGraph.Web" tagPrefix="zgw"/>
				<!-- AJAX Extensions support -->
				<add tagPrefix="asp" namespace="System.Web.UI" assembly="System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
				<add tagPrefix="asp" namespace="Microsoft.Web.Preview.UI" assembly="Microsoft.Web.Preview"/>
				<add tagPrefix="asp" namespace="Microsoft.Web.Preview.UI.Controls" assembly="Microsoft.Web.Preview"/>
				<add tagPrefix="asp" namespace="System.Web.UI.WebControls" assembly="System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
			</controls>
			<tagMapping>
				<!-- 
        had to revert due to this bug http://www.codeplex.com/AjaxControlToolkit/WorkItem/View.aspx?WorkItemId=17574
        which affected Form Wizard Pro
        <add tagType="System.Web.UI.ScriptManager" mappedTagType="System.Web.UI.AjaxScriptManager" />
         -->
				<add tagType="System.Web.UI.WebControls.WebParts.WebPartManager" mappedTagType="Microsoft.Web.Preview.UI.Controls.WebParts.WebPartManager"/>
				<add tagType="System.Web.UI.WebControls.WebParts.WebPartZone" mappedTagType="Microsoft.Web.Preview.UI.Controls.WebParts.WebPartZone"/>
			</tagMapping>
		</pages>
		<!-- for testing purposes only
		Some hosted environments enforce Medium trust
		this setting in the machine.config will override any setting made here
		 <trust level="Medium" originUrl="" />
     For server side web requests to work we need the origin url like this:
     <trust level="Medium" originUrl=".*" />
		     
		-->
		<!-- Handlers for IIS 6.0 and IIS 7.0 Classic mode -->
		<httpHandlers>
			<!-- AJAX Extensions support -->
			<remove verb="*" path="*.asmx"/>
			<!-- 3.5 .NET -->
			<add verb="*" path="*.asmx" validate="false" type="System.Web.Script.Services.ScriptHandlerFactory, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
			<add verb="*" path="*_AppService.axd" validate="false" type="System.Web.Script.Services.ScriptHandlerFactory, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
			<add verb="GET,HEAD" path="ScriptResource.axd" type="System.Web.Handlers.ScriptResourceHandler, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" validate="false"/>
			<add verb="*" path="TinyMCEHandler.ashx" type="Cynthia.Web.Editor.TinyMceHttpHandler, Cynthia.Web" validate="false"/>
			<add verb="*" path="*CaptchaImage.ashx" type="Subkismet.Captcha.CaptchaImageHandler, Subkismet"/>
			<add verb="*" path="*thumbnailservice.ashx" type="Cynthia.Web.Controls.Album, Cynthia.Web.Controls"/>
			<add verb="*" path="*scripthandler.ashx" type="Cynthia.Web.Framework.ScriptHandler, Cynthia.Web.Framework"/>
			<add verb="*" path="*csshandler.ashx" type="Cynthia.Web.UI.CssHandler, Cynthia.Web"/>
			<add verb="*" path="*.mml.ashx" type="Cynthia.Web.Services.MathMLHandler, Cynthia.Web"/>
			<add verb="GET" path="TimelineData.ashx" type="TimelineNet.TimelineAjaxHandler, TimelineNet"/>
			<add verb="*" path="*metaweblogapi.ashx" type="Cynthia.Web.Services.Metaweblog.MetaWeblogger, Cynthia.Modules.UI"/>
			<!--
      <add verb="*" path="*SiteImage.ashx" type="Cynthia.SiteImageService.SiteImageHandler, Cynthia.SiteImageService" />
      -->
		</httpHandlers>
		<!-- Modules for IIS 6.0 and IIS 7.0 Classic mode -->
		<httpModules>
			<!-- Comment the this out if running in Medium Trust -->
			<add name="UploadHttpModule" type="Brettle.Web.NeatUpload.UploadHttpModule, Brettle.Web.NeatUpload"/>
			<!-- if using Medium trust and you can install NeatUpload in the GAC then un-comment this and comment out the one above 
      you will also need to set the type according to the version of NeatUpload installed in the GAC
      http://www.brettle.com/NeatUpload-1.3/dotnet/docs/Manual.html#MediumTrust
      -->
			<!--
			<add name="UploadHttpModule" type="Brettle.Web.NeatUpload.UploadHttpModule, Brettle.Web.NeatUpload, Version=1.3.3284.14313, Culture=neutral, PublicKeyToken=c95290d92c5893c8" />
			-->
			<add name="GCheckoutBasicAuthenticationModule" type="Cynthia.Web.GCheckoutBasicAuthenticationModule, Cynthia.Web"/>
			<add name="BannedIPBlockingHttpModule" type="Cynthia.Web.BannedIPBlockingHttpModule, Cynthia.Web"/>
			<add name="UrlRewriter" type="Cynthia.Web.UrlRewriter, Cynthia.Web"/>
			<add name="AuthHandlerHttpModule" type="Cynthia.Web.AuthHandlerHttpModule, Cynthia.Web"/>
			<add name="PageNotFoundHandler" type="Cynthia.Web.PageNotFoundHttpModule, Cynthia.Web"/>
			<!-- comment this out out if running in Medium Trust -->
			<add name="CultureHelperHttpModule" type="Cynthia.Web.CultureHelperHttpModule, Cynthia.Web"/>
			<!-- AJAX Extensions support -->
			<!-- 3.5 .NET -->
			<add name="ScriptModule" type="System.Web.Handlers.ScriptModule, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
		</httpModules>
		<!-- set debugmode to false for production -->
		<compilation debug="true" defaultLanguage="C#">
			<assemblies>
				<!-- if using Medium trust install NeatUpload in the GAC and un-comment this  -->
				<!-- 
				<add assembly="Brettle.Web.NeatUpload, Version=1.3.3284.14313, Culture=neutral, PublicKeyToken=c95290d92c5893c8"/>
				-->
				<!-- AJAX Extensions suport -->
				<add assembly="Microsoft.Web.Preview, Version=1.0.61025.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"/>
				<!-- 3.5 .NET -->
				<add assembly="System.Core, Version=3.5.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089"/>
				<add assembly="System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
				<add assembly="System.Xml.Linq, Version=3.5.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089"/>
				<add assembly="System.Data.DataSetExtensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089"/>
				<add assembly="System.Data.Linq, Version=3.5.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089"/>
			</assemblies>
		</compilation>
		<!--Cynthia supports either Forms authentication (Internet)
            or Windows authentication (for intranets).  Forms Authentication is
            the default.  To change to Windows authentication, comment the 
            <authentication mode="Forms"> section below, and uncomment the 
            <authentication mode="Windows"> section. 
			
			For using Active Directory or OpenLDAP use Forms authentication
      
      <authentication mode="Forms">
      <forms
				name=".Cchangeme"
				protection="All"
				timeout="50000000"
				path="/"
				
				/>
    </authentication>
    
   
    <authentication mode="Windows" />
        <authorization>
            <deny users="?" />
        </authorization>
		 
     <authentication mode="Forms">
			<forms loginUrl="Secure/Login.aspx" name=".Cchangeme" protection="All" timeout="50000000" path="/" cookieless="UseCookies" />
		</authentication>
    <authorization>
      <deny users="?" />
    </authorization>
    
      
			-->
		<authentication mode="Forms">
			<forms name=".Cythia_2010" protection="All" timeout="50000000" path="/" cookieless="UseCookies"/>
		</authentication>
		<!--
		<identity impersonate="false" />
			 -->
		<anonymousIdentification enabled="false" cookieName=".ASPXANONYMOUS" cookieTimeout="43200" cookieSlidingExpiration="true" cookieless="UseCookies" cookieProtection="All"/>
		<!--  CUSTOM ERROR MESSAGES
          Set customErrors mode="On" or "RemoteOnly" to enable custom error messages, "Off" to disable. 
          Add <error> tags for each of the errors you want to handle.

          "On" Always display custom (friendly) messages.
          "Off" Always display detailed ASP.NET error information.
          "RemoteOnly" Display custom (friendly) messages only to users not running 
           on the local Web server. This setting is recommended for security purposes, so 
           that you do not display application detail information to remote clients.
	
  
		-->
		<customErrors mode="RemoteOnly" defaultRedirect="Error.htm">
			<error statusCode="413" redirect="~/NeatUpload/Error413.aspx"/>
		</customErrors>
		<!-- set enabled to true if you want to trace -->
		<trace enabled="false" writeToDiagnosticsTrace="true" requestLimit="50" pageOutput="true" traceMode="SortByTime" localOnly="false"/>
		<!-- 
			this sets the max size of an upload if the 
			UploadHttpModule is not being used (ie commented out because it can't work in mediumtrust).  In that case, the
			entire request is stored in memory so large uploads 
			could be used as a Denial of Service attack.
			use you own judgement in determining the max size of
			a request you want to allow. 
      <httpRuntime maxRequestLength="2097151" executionTimeout="3600" useFullyQualifiedRedirectUrl="true" />
		-->
	</system.web>
	<!-- 
  limit file upload size
  maxRequestLength="up to 2097151 in KBytes, defaults to 2097151
  // non upload requests should leave the defaultalone
  maxNormalRequestLength="up to 2097151 in KBytes, defaults to 4096" 
  maxUploadRate="300"
  -->
	<!-- this is if you want to throttle upload speed set the kb/sec
  maxUploadRate="100"
  -->
	<!-- Comment this out in Medium Trust -->
	<neatUpload useHttpModule="true" maxNormalRequestLength="4096" maxRequestLength="2097151" multiRequestUploadHandlerUrl="~/NeatUpload/MultiRequestUploadHandler.ashx" maxUploadRate="300" xmlns="http://www.brettle.com/neatupload/config/2008">
	</neatUpload>
	<system.webServer>
		<!-- disable runtime rejection of Integrated mode applications that have legacy ASP.NET settings -->
		<validation validateIntegratedModeConfiguration="false"/>
		<defaultDocument>
			<files>
				<remove value="Default.aspx"/>
				<add value="Default.aspx"/>
			</files>
		</defaultDocument>
		<!-- 
    info about custom error configuration
    http://msdn.microsoft.com/en-us/library/ms690497.aspx 
    its commented out below because by default IIS7 has this locked down at a parent config file, probably machine.config
    -->
		<!--
     <httpErrors errorMode="DetailedLocalOnly" defaultResponseMode="ExecuteURL" defaultPath="Error.htm">
      
    </httpErrors>
      
      -->
		<!-- Modules for IIS 7.0 Integrated mode -->
		<!-- to use extensionless urls you need to add the runAllManagedModulesForAllRequests="true"
		<modules runAllManagedModulesForAllRequests="true">
    -->
		<modules>
			<remove name="ScriptModule"/>
			<add name="BannedIPBlockingHttpModule" type="Cynthia.Web.BannedIPBlockingHttpModule, Cynthia.Web"/>
			<add name="GCheckoutBasicAuthenticationModule" type="Cynthia.Web.GCheckoutBasicAuthenticationModule, Cynthia.Web"/>
			<add name="UrlRewriter" type="Cynthia.Web.UrlRewriter, Cynthia.Web" preCondition=""/>
			<add name="AuthHandlerHttpModule" type="Cynthia.Web.AuthHandlerHttpModule, Cynthia.Web" preCondition=""/>
			<!-- Comment this out in Medium Trust -->
			<add name="UploadHttpModule" type="Brettle.Web.NeatUpload.UploadHttpModule, Brettle.Web.NeatUpload" preCondition="managedHandler"/>
			<!-- if using Medium trust and you can install NeatUpload in the GAC then un-comment this and comment out the one above 
      you will also need to set the type according to the version of NeatUpload installed in the GAC
      http://www.brettle.com/NeatUpload-1.3/dotnet/docs/Manual.html#MediumTrust
      -->
			<!--
			<add name="UploadHttpModule" type="Brettle.Web.NeatUpload.UploadHttpModule, Brettle.Web.NeatUpload, Version=1.3.3284.14313, Culture=neutral, PublicKeyToken=c95290d92c5893c8" preCondition="managedHandler" />
			-->
			<add name="PageNotFoundHandler" type="Cynthia.Web.PageNotFoundHttpModule, Cynthia.Web" preCondition="managedHandler"/>
			<!-- comment this out out if running in Medium Trust -->
			<add name="CultureHelperHttpModule" type="Cynthia.Web.CultureHelperHttpModule, Cynthia.Web"/>
			<add name="ScriptModule" type="System.Web.Handlers.ScriptModule, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" preCondition="managedHandler"/>
		</modules>
		<!-- Handlers for IIS 7.0 Integrated mode -->
		<handlers>
			<remove name="WebServiceHandlerFactory-Integrated"/>
			<remove name="ScriptHandlerFactory"/>
			<remove name="ScriptHandlerFactoryAppServices"/>
			<remove name="ScriptResource"/>
			<!-- this is causing errors on some Win 2008 installations 
            <add name="svc-ISAPI-2.0" path="*.svc" verb="*" modules="IsapiModule" scriptProcessor="%SystemRoot%\Microsoft.NET\Framework\v2.0.50727\aspnet_isapi.dll" resourceType="Unspecified" preCondition="classicMode,runtimeVersionv2.0,bitness32" />
            <add name="svc-Integrated" path="*.svc" verb="*" type="System.ServiceModel.Activation.HttpHandler, System.ServiceModel, Version=3.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" resourceType="Unspecified" preCondition="integratedMode" />
			-->
			<add name="ScriptHandlerFactory" verb="*" path="*.asmx" preCondition="integratedMode" type="System.Web.Script.Services.ScriptHandlerFactory, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
			<add name="ScriptHandlerFactoryAppServices" verb="*" path="*_AppService.axd" preCondition="integratedMode" type="System.Web.Script.Services.ScriptHandlerFactory, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
			<add name="ScriptResource" verb="GET,HEAD" path="ScriptResource.axd" preCondition="integratedMode" type="System.Web.Handlers.ScriptResourceHandler, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
			<add name="TinyMceHttpHandler" verb="*" path="TinyMCEHandler.ashx" type="Cynthia.Web.Editor.TinyMceHttpHandler, Cynthia.Web" preCondition="integratedMode"/>
			<add name="SubkismetCaptchaHandler" verb="*" path="*CaptchaImage.ashx" type="Subkismet.Captcha.CaptchaImageHandler, Subkismet" preCondition="integratedMode"/>
			<add name="ThumbnailServiceHandler" verb="*" path="*thumbnailservice.ashx" type="Cynthia.Web.Controls.Album, Cynthia.Web.Controls" preCondition="integratedMode"/>
			<add name="ScriptCombinerHandler" verb="*" path="*scripthandler.ashx" type="Cynthia.Web.Framework.ScriptHandler, Cynthia.Web.Framework" preCondition="integratedMode"/>
			<add name="CssHandler" verb="*" path="*csshandler.ashx" type="Cynthia.Web.UI.CssHandler, Cynthia.Web" preCondition="integratedMode"/>
			<add name="MathMLHandler" verb="*" path="*.mml.ashx" type="Cynthia.Web.Services.MathMLHandler, Cynthia.Web" preCondition="integratedMode"/>
			<add name="TimelineAjaxHandler" verb="GET" path="TimelineData.ashx" type="TimelineNet.TimelineAjaxHandler, TimelineNet" preCondition="integratedMode"/>
			<add name="MetaWeblogAPIHandler" verb="*" path="*metaweblogapi.ashx" type="Cynthia.Web.Services.Metaweblog.MetaWeblogger, Cynthia.Modules.UI" preCondition="integratedMode"/>
			<!--
      <add name="SiteImageHandler" verb="*" path="*SiteImage.ashx" type="Cynthia.SiteImageService.SiteImageHandler, Cynthia.SiteImageService" preCondition="integratedMode" />
      -->
		</handlers>
		<!--
    <security>
      <requestFiltering>
        <requestLimits maxAllowedContentLength="3000000000" />
      </requestFiltering>
    </security>
    -->
		<!--
    <staticContent>
      <clientCache httpExpires="Sun, 29 Mar 2020 00:00:00 GMT" cacheControlMode="UseExpires" />
    </staticContent>
    -->
	</system.webServer>
	<system.web.extensions>
		<scripting>
			<scriptResourceHandler enableCompression="true" enableCaching="true"/>
			<webServices>
				<authenticationService enabled="true" requireSSL="false"/>
				<roleService enabled="true"/>
			</webServices>
		</scripting>
	</system.web.extensions>
	<system.serviceModel>
		<services>
			<service name="System.Web.ApplicationServices.AuthenticationService" behaviorConfiguration="AuthenticationServiceTypeBehaviors">
				<endpoint contract="System.Web.ApplicationServices.AuthenticationService" binding="basicHttpBinding" bindingConfiguration="userHttp" bindingNamespace="http://asp.net/ApplicationServices/v200"/>
			</service>
			<service name="System.Web.ApplicationServices.RoleService" behaviorConfiguration="RoleServiceTypeBehaviors">
				<endpoint contract="System.Web.ApplicationServices.RoleService" binding="basicHttpBinding" bindingConfiguration="userHttp" bindingNamespace="http://asp.net/ApplicationServices/v200"/>
			</service>
		</services>
		<bindings>
			<basicHttpBinding>
				<binding name="userHttp">
					<!-- if you have an ssl certificate set this to Transport -->
					<security mode="None"/>
				</binding>
			</basicHttpBinding>
		</bindings>
		<behaviors>
			<serviceBehaviors>
				<behavior name="AuthenticationServiceTypeBehaviors">
					<serviceMetadata httpGetEnabled="true"/>
				</behavior>
				<behavior name="RoleServiceTypeBehaviors">
					<serviceMetadata httpGetEnabled="true"/>
				</behavior>
			</serviceBehaviors>
		</behaviors>
		<!-- comment this out for Mono -->
		<serviceHostingEnvironment aspNetCompatibilityEnabled="true"/>
	</system.serviceModel>
	<system.net>
		<mailSettings>
			<smtp from="noreply@yourdomain.com">
				<network host="localhost" port="25" password="" userName="noreply@yourdomain.com"/>
			</smtp>
		</mailSettings>
	</system.net>
	<system.codedom>
		<compilers>
			<compiler language="c#;cs;csharp" extension=".cs" type="Microsoft.CSharp.CSharpCodeProvider,System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" warningLevel="4">
				<providerOption name="CompilerVersion" value="v3.5"/>
				<providerOption name="WarnAsError" value="false"/>
			</compiler>
		</compilers>
	</system.codedom>
	<runtime>
		<assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1" appliesTo="v2.0.50727"><dependentAssembly>
				<assemblyIdentity name="System.Web.Extensions" publicKeyToken="31bf3856ad364e35"/>
				<bindingRedirect oldVersion="1.0.0.0-1.1.0.0" newVersion="3.5.0.0"/>
			</dependentAssembly>
			<dependentAssembly>
				<assemblyIdentity name="System.Web.Extensions.Design" publicKeyToken="31bf3856ad364e35"/>
				<bindingRedirect oldVersion="1.0.0.0-1.1.0.0" newVersion="3.5.0.0"/>
			</dependentAssembly>
		</assemblyBinding></runtime>
</configuration>
